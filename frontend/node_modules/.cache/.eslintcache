[{"/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/index.js":"1","/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/App.js":"2","/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Airport.js":"3","/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Login.js":"4","/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Profile.js":"5","/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Signup.js":"6","/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Travelling.js":"7","/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Passport.js":"8","/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Chat.js":"9","/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Trip.js":"10","/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/GuessForm.js":"11","/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Map.js":"12","/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Info.js":"13"},{"size":358,"mtime":1617805262066,"results":"14","hashOfConfig":"15"},{"size":2222,"mtime":1618600331601,"results":"16","hashOfConfig":"15"},{"size":2087,"mtime":1618318811711,"results":"17","hashOfConfig":"15"},{"size":2085,"mtime":1617828869283,"results":"18","hashOfConfig":"15"},{"size":4647,"mtime":1618250932636,"results":"19","hashOfConfig":"15"},{"size":1917,"mtime":1617825912321,"results":"20","hashOfConfig":"15"},{"size":3141,"mtime":1618497578379,"results":"21","hashOfConfig":"15"},{"size":1007,"mtime":1618250958013,"results":"22","hashOfConfig":"15"},{"size":14655,"mtime":1618602405955,"results":"23","hashOfConfig":"15"},{"size":1260,"mtime":1618252994985,"results":"24","hashOfConfig":"15"},{"size":10162,"mtime":1618430635578,"results":"25","hashOfConfig":"15"},{"size":12011,"mtime":1618432189353,"results":"26","hashOfConfig":"15"},{"size":108,"mtime":1618600256190,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"152fu9t",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/index.js",[],["58","59"],"/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/App.js",["60","61"],"/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Airport.js",[],"/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Login.js",[],"/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Profile.js",[],"/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Signup.js",[],"/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Travelling.js",["62"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Chat from \"./Chat\";\nimport GuessForm from \"./GuessForm\";\nimport Map from \"./Map\";\n\nfunction Travelling({ travelMode, api, user }) {\n  const [modalShowing, setModalShowing] = useState(false);\n  const [chatShowing, setChatShowing] = useState(false);\n  const [englishOnly, setEnglishOnly] = useState(false);\n  const [imgKey, setImgKey] = useState(\"KGHbNmfZQ8z9BcWb1a_3lg\"); //defaults to Macao, arbitrarily in case any problem with fetch\n  const [address, setAddress] = useState({\n    name: \"Macao\",\n    state: \"Macao\",\n    country: \"People's Republic of China\",\n    continent: \"Asia\",\n    image_key: \"KGHbNmfZQ8z9BcWb1a_3lg\",\n    flag_url:\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/63/Flag_of_Macau.svg/1200px-Flag_of_Macau.svg.png\",\n    flag_emoji: \"🇲🇴\",\n    food: \"Oh, I love a good Portguese Egg Tart! 吃飯囉！\",\n    language:\n      \"Though some people here speak Portuguese, my family and I speak in Chinese!\",\n    religion:\n      \"Many people here are Buddhists, and there are a few Catholics, but I don't practice any religion.\",\n  });\n\n  useEffect(() => {\n    fetch(`${api}/city_info/${user.id}`)\n      .then((r) => r.json())\n      .then((city) => {\n        setAddress(city);\n        setImgKey(city.image_key);\n      });\n  }, []);\n\n  const [messages, setMessages] = useState([]);\n  const history = useHistory();\n\n  return (\n    <div id=\"wrapper\">\n      <div>\n        {/* the line below gives an issue when you refresh the page, because you got\n        here without props, because state reset... */}\n        <h3 className=\"content\">{travelMode}!</h3>\n        <div className=\"content\">\n          {travelMode === \"Tourism\"\n            ? \"Roam around freely!\"\n            : travelMode === \"Find Yourself\"\n            ? \"Guess your location!\"\n            : \"Find your way to a GIVEN-PLACE\"}\n        </div>\n        <br></br>\n        <div\n          className=\"content content-button\"\n          onClick={() => history.push(\"/\")}\n        >\n          Warp Back to Airport\n        </div>\n        {travelMode === \"Find Yourself\" ? (\n          <div\n            className=\"content content-button\"\n            onClick={() => setModalShowing(true)}\n          >\n            Make a guess!\n          </div>\n        ) : null}\n        <div\n          className=\"content content-button\"\n          onClick={() => setChatShowing(true)}\n        >\n          Chat with a local\n        </div>\n        {chatShowing ? (\n          <Chat\n            setChatShowing={setChatShowing}\n            address={address}\n            messages={messages}\n            setMessages={setMessages}\n            englishOnly={englishOnly}\n            setEnglishOnly={setEnglishOnly}\n          />\n        ) : null}\n      </div>\n      <div className=\"background\">\n        <Map imgKey={imgKey} />\n      </div>\n\n      {travelMode === \"Find Yourself\" ? (\n        <GuessForm\n          address={address}\n          modalShowing={modalShowing}\n          setModalShowing={setModalShowing}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default Travelling;\n","/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Passport.js",["63"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Trip from \"./Trip\";\nimport world from \"./world.png\";\n\nfunction Passport({ user, api }) {\n  const history = useHistory();\n  const [trips, setTrips] = useState([]);\n\n  useEffect(() => {\n    fetch(`${api}/usertrips/${user.id}`)\n      .then((r) => r.json())\n      .then((tList) => setTrips(tList));\n  }, []);\n\n  return (\n    <div\n      style={{\n        background: `url(${world})`,\n        height: \"100vh\",\n        width: \"100%\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n      }}\n    >\n      <h1>Here is your passport!</h1>\n      {trips.map((trip, i) => {\n        return <Trip key={i} trip={trip} api={api} setTrips={setTrips} />;\n      })}\n      <br></br>\n      <div\n        className=\"content content-button\"\n        key={trips.length + 1}\n        onClick={() => history.push(\"/\")}\n      >\n        Back to Terminal\n      </div>\n    </div>\n  );\n}\n\nexport default Passport;\n","/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Chat.js",["64","65"],"/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Trip.js",[],"/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/GuessForm.js",[],"/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Map.js",["66","67"],"import { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport { MapillaryViewer } from \"react-mapillary\";\n// const europe = [\n//   \"Albania\",\n//   \"Andorra\",\n//   \"Armenia\",\n//   \"Austria\",\n//   \"Azerbaijan\",\n//   \"Belarus\",\n//   \"Belgium\",\n//   \"Bosnia and Herzegovina\",\n//   \"Bosnia\",\n//   \"Herzegovina\",\n//   \"Bosnia-Herzegovina\",\n//   \"Bulgaria\",\n//   \"Croatia\",\n//   \"Cyprus\",\n//   \"Czechia\",\n//   \"Denmark\",\n//   \"Estonia\",\n//   \"Finland\",\n//   \"France\",\n//   \"Georgia\",\n//   \"Germany\",\n//   \"Greece\",\n//   \"Hungary\",\n//   \"Iceland\",\n//   \"Ireland\",\n//   \"Italy\",\n//   \"Kazakhstan\",\n//   \"Kosovo\",\n//   \"Latvia\",\n//   \"Liechtenstein\",\n//   \"Lithuania\",\n//   \"Luxembourg\",\n//   \"Malta\",\n//   \"Moldova\",\n//   \"Monaco\",\n//   \"Montenegro\",\n//   \"Netherlands\",\n//   \"North Macedonia\",\n//   \"Macedonia\",\n//   \"Norway\",\n//   \"Poland\",\n//   \"Portugal\",\n//   \"Romania\",\n//   \"Russia\",\n//   \"San Marino\",\n//   \"Serbia\",\n//   \"Slovakia\",\n//   \"Slovenia\",\n//   \"Spain\",\n//   \"Sweden\",\n//   \"Switzerland\",\n//   \"Turkey\",\n//   \"Ukraine\",\n//   \"United Kingdom\",\n//   \"UK\",\n//   \"Vatican City\",\n// ];\n// const asia = [\n//   \"Afghanistan\",\n//   \"Armenia\",\n//   \"Azerbaijan\",\n//   \"Bahrain\",\n//   \"Bangladesh\",\n//   \"Bhutan\",\n//   \"Brunei\",\n//   \"Cambodia\",\n//   \"China\",\n//   \"Cyprus\",\n//   \"Georgia\",\n//   \"India\",\n//   \"Indonesia\",\n//   \"Iran\",\n//   \"Iraq\",\n//   \"Israel\",\n//   \"Japan\",\n//   \"Jordan\",\n//   \"Kazakhstan\",\n//   \"Kuwait\",\n//   \"Kyrgyzstan\",\n//   \"Laos\",\n//   \"Lebanon\",\n//   \"Macao\",\n//   \"Macau\",\n//   \"Malaysia\",\n//   \"Maldives\",\n//   \"Mongolia\",\n//   \"Myanmar\",\n//   \"Burma\",\n//   \"Nepal\",\n//   \"North Korea\",\n//   \"Oman\",\n//   \"Pakistan\",\n//   \"Palestine\",\n//   \"Philippines\",\n//   \"Qatar\",\n//   \"Russia\",\n//   \"Saudi Arabia\",\n//   \"Singapore\",\n//   \"South Korea\",\n//   \"Sri Lanka\",\n//   \"Syria\",\n//   \"Taiwan\",\n//   \"Tajikistan\",\n//   \"Thailand\",\n//   \"Timor-Leste\",\n//   \"Turkey\",\n//   \"Turkmenistan\",\n//   \"United Arab Emirates\",\n//   \"UAE\",\n//   \"Uzbekistan\",\n//   \"Vietnam\",\n//   \"Yemen\",\n// ];\n// const africa = [\n//   \"Algeria\",\n//   \"Angola\",\n//   \"Benin\",\n//   \"Botswana\",\n//   \"Burkina Faso\",\n//   \"Burundi\",\n//   \"Cabo Verde\",\n//   \"Cameroon\",\n//   \"Central African Republic\",\n//   \"CAR\",\n//   \"Chad\",\n//   \"Comoros\",\n//   \"Congo, Democratic Republic of the\",\n//   \"Democratic Republic of the Congo\",\n//   \"Congo, Republic of the\",\n//   \"Republic of the Congo\",\n//   \"Cote d'Ivoire\",\n//   \"Djibouti\",\n//   \"Egypt\",\n//   \"Equatorial Guinea\",\n//   \"Eritrea\",\n//   \"Eswatini\",\n//   \"Swaziland\",\n//   \"Ethiopia\",\n//   \"Gabon\",\n//   \"Gambia\",\n//   \"Ghana\",\n//   \"Guinea\",\n//   \"Guinea-Bissau\",\n//   \"Kenya\",\n//   \"Lesotho\",\n//   \"Liberia\",\n//   \"Libya\",\n//   \"Madagascar\",\n//   \"Malawi\",\n//   \"Mali\",\n//   \"Mauritania\",\n//   \"Mauritius\",\n//   \"Morocco\",\n//   \"Mozambique\",\n//   \"Namibia\",\n//   \"Niger\",\n//   \"Nigeria\",\n//   \"Rwanda\",\n//   \"Sao Tome and Principe\",\n//   \"Sao Tome\",\n//   \"Principe\",\n//   \"Saint Thomas and Prince\",\n//   \"Senegal\",\n//   \"Seychelles\",\n//   \"Sierra Leone\",\n//   \"Somalia\",\n//   \"South Africa\",\n//   \"South Sudan\",\n//   \"Sudan\",\n//   \"Tanzania\",\n//   \"Togo\",\n//   \"Tunisia\",\n//   \"Uganda\",\n//   \"Zambia\",\n//   \"Zimbabwe\",\n// ];\n// const northAmerica = [\n//   \"Antigua and Barbuda\",\n//   \"Bahamas\",\n//   \"Barbados\",\n//   \"Belize\",\n//   \"Canada\",\n//   \"Costa Rica\",\n//   \"Cuba\",\n//   \"Dominica\",\n//   \"Dominican Republic\",\n//   \"El Salvador\",\n//   \"Grenada\",\n//   \"Guatemala\",\n//   \"Haiti\",\n//   \"Honduras\",\n//   \"Jamaica\",\n//   \"Mexico\",\n//   \"Nicaragua\",\n//   \"Panama\",\n//   \"Saint Kitts and Nevis\",\n//   \"Saint Lucia\",\n//   \"Saint Vincent and the Grenadines\",\n//   \"Trinidad and Tobago\",\n//   \"United States of America\",\n//   \"United States\",\n//   \"US\",\n//   \"USA\",\n//   \"Anguilla\",\n//   \"Aruba\",\n//   \"Bermuda\",\n//   \"Bonaire\",\n//   \"British Virgin Islands\",\n//   \"Cayman Islands\",\n//   \"Clipperton Island\",\n//   \"Curacao\",\n//   \"Greenland\",\n//   \"Guadeloupe\",\n//   \"Martinique\",\n//   \"Montserrat\",\n//   \"Navassa Island\",\n//   \"Puerto Rico\",\n//   \"Saba\",\n//   \"Saint Barthelemy\",\n//   \"Saint Martin\",\n//   \"Saint Pierre and Miquelon\",\n//   \"Sint Eustatius\",\n//   \"Sint Maarten\",\n//   \"Turks and Caicos Islands\",\n//   \"US Virgin Islands\",\n// ];\n// const southAmerica = [\n//   \"Argentina\",\n//   \"Bolivia\",\n//   \"Brazil\",\n//   \"Chile\",\n//   \"Colombia\",\n//   \"Ecuador\",\n//   \"Guyana\",\n//   \"Paraguay\",\n//   \"Peru\",\n//   \"Suriname\",\n//   \"Uruguay\",\n//   \"Venezuela\",\n//   \"Falkland Islands\",\n//   \"Falkland Islands (Islas Malvinas)\",\n//   \"Islas Malvinas\",\n//   \"French Guiana\",\n//   \"South Georgia and the South Sandwich Islands\",\n// ];\n// const oceania = [\n//   \"Australia\",\n//   \"Fiji\",\n//   \"Kiribati\",\n//   \"Marshall Islands\",\n//   \"Micronesia\",\n//   \"Nauru\",\n//   \"New Zealand\",\n//   \"Palau\",\n//   \"Papua New Guinea\",\n//   \"Samoa\",\n//   \"Solomon Islands\",\n//   \"Tonga\",\n//   \"Tuvalu\",\n//   \"Vanuatu\",\n//   \"American Samoa\",\n//   \"Cook Islands\",\n//   \"French Polynesia\",\n//   \"Guam\",\n//   \"New Caledonia\",\n//   \"Niue\",\n//   \"Norfolk Island\",\n//   \"Northern Mariana Islands\",\n//   \"Pitcairn Islands\",\n//   \"Tokelau\",\n//   \"Wake Island\",\n//   \"Wallis and Futuna\",\n// ];\n\nfunction Map({ imgKey }) {\n  const [latlong, setLatlong] = useState({ lat: 0, long: 0 });\n  console.log(latlong);\n\n  {\n    //the following comments are mostly from when i was fetching random mapillary images - and they depended on state being located here.\n    // function randCoord() {\n    //   // LATITUDE -90 to +90\n    //   let lat = (Math.random() * 90).toFixed(3);\n    //   if (Math.random() < 0.5) {\n    //     lat = lat * -1;\n    //   }\n    //   // LONGITUDE -180 to + 180\n    //   let long = (Math.random() * 180).toFixed(3);\n    //   if (Math.random() < 0.5) {\n    //     long = long * -1;\n    //   }\n    //   return { lat: parseFloat(lat), long: parseFloat(long) }; //why the heck would i need to do this??? long was a string and lat wasnt...\n    // }\n    // function makebbox() {\n    //   const coord = randCoord();\n    //   return {\n    //     minlong: coord.long - 4,\n    //     minlat: coord.lat - 2,\n    //     maxlong: coord.long + 4,\n    //     maxlat: coord.lat + 2,\n    //   };\n    // }\n    // useEffect(() => {\n    //   fetchSequences();\n    // }, []); //[trigger]\n    // function fetchSequences() {\n    //   const bbox = makebbox();\n    //   fetch(\n    //     `https://a.mapillary.com/v3/sequences?bbox=${bbox.minlong},${\n    //       bbox.minlat\n    //     },${bbox.maxlong},${\n    //       bbox.maxlat\n    //     }&client_id=${\"MHZvSFJXZjRWR0p0YWZpODRTMDhDbjoxOTUzYjNlMjVlMWM0NTcw\"}`\n    //   )\n    //     .then((r) => r.json())\n    //     .then((data) => getApic(data));\n    // }\n    // function getApic(data) {\n    //   console.log(\"justfetchedsomestuff\", data);\n    //   // if (data.features) {\n    //   if (data.features.length < 30) {\n    //     fetchSequences(); //setTrigger(true);\n    //   } else {\n    //     let feature =\n    //       data.features[Math.floor(Math.random() * data.features.length)];\n    //     console.log(\"did this work? grabbing a random sample\", feature);\n    //     let count = 0;\n    //     while (\n    //       feature.properties.coordinateProperties.image_keys.length < 30 &&\n    //       count < 3 * data.features.length\n    //     ) {\n    //       feature = data.features.sample;\n    //       count++;\n    //     }\n    //     if (count === 3 * data.features.length) {\n    //       fetchSequences(); // setTrigger(true);\n    //     } else {\n    //       console.log(feature.properties.coordinateProperties.image_keys[0]);\n    //       setLatlong({\n    //         lat: feature.geometry.coordinates[0],\n    //         long: feature.geometry.coordinates[1],\n    //       });\n    //       setImgKey(feature.properties.coordinateProperties.image_keys[0]);\n    //     }\n    //   }\n    //   //  }\n    // }\n    // console.log(address);\n    // useEffect(() => {\n    //   fetch(`${api}/city_info`, {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //       accept: \"application/json\",\n    //     },\n    //     body: JSON.stringify(latlong),\n    //   })\n    //     .then((r) => r.json())\n    //     .then((body) => handleLocationData(body));\n    // }, [imgKey]); // [latlong]\n    // function handleLocationData(data) {\n    //   setAddress({\n    //     city: \"\",\n    //     state: \"\",\n    //     country: \"\",\n    //     continent: \"\",\n    //   });\n    //   console.log(\"does this look right to you?\", data, typeof data);\n    //   if (!data.error) {\n    //     data.forEach((d) => {\n    //       if (d.types.includes(\"country\")) {\n    //         const countryName = d.long_name;\n    //         if (europe.includes(countryName)) {\n    //           setAddress((address) => ({\n    //             ...address,\n    //             country: countryName,\n    //             continent: \"Europe\",\n    //           }));\n    //         } else if (asia.includes(countryName)) {\n    //           setAddress((address) => ({\n    //             ...address,\n    //             country: countryName,\n    //             continent: \"Asia\",\n    //           }));\n    //         } else if (africa.includes(countryName)) {\n    //           setAddress((address) => ({\n    //             ...address,\n    //             country: countryName,\n    //             continent: \"Africa\",\n    //           }));\n    //         } else if (northAmerica.includes(countryName)) {\n    //           setAddress((address) => ({\n    //             ...address,\n    //             country: countryName,\n    //             continent: \"North America\",\n    //           }));\n    //         } else if (southAmerica.includes(countryName)) {\n    //           setAddress((address) => ({\n    //             ...address,\n    //             country: countryName,\n    //             continent: \"South America\",\n    //           }));\n    //         } else if (oceania.includes(countryName)) {\n    //           setAddress((address) => ({\n    //             ...address,\n    //             country: countryName,\n    //             continent: \"Oceania/Australia\",\n    //           }));\n    //         }\n    //       } else if (\n    //         d.types.includes(\"locality\") ||\n    //         d.types.includes(\"administrative_area_level_1\")\n    //       ) {\n    //         const stateName = d.long_name;\n    //         setAddress((address) => ({ ...address, state: stateName }));\n    //       } else if (\n    //         d.types.includes(\"sublocality\") ||\n    //         d.types.includes(\"administrative_area_level_2\")\n    //       ) {\n    //         const cityName = d.long_name;\n    //         setAddress((address) => ({ ...address, city: cityName }));\n    //       }\n    //     });\n    //     console.log(\"finished finding geography info\");\n    //     setStamp(!stamp);\n    //   }\n    // }\n    // useEffect(() => {\n    //   fetch(`${api}/stamp/${user.id}`, {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"content-type\": \"application/json\",\n    //       accept: \"application/json\",\n    //     },\n    //     body: JSON.stringify(address),\n    //   })\n    //     .then((r) => r.json())\n    //     .then((reply) => console.log(\"saved this place, or tried to\", reply));\n    // }, [stamp]);\n  }\n  return (\n    <div\n      id=\"map-container\"\n      // role=\"button\"\n      // tabIndex=\"-1\"\n      style={{\n        width: \"100vw\",\n        height: \"100vh\",\n      }}\n    >\n      <MapillaryViewer\n        clientId=\"MHZvSFJXZjRWR0p0YWZpODRTMDhDbjoxOTUzYjNlMjVlMWM0NTcw\"\n        imageKey={imgKey}\n        // filter={[\"==\", \"userKey\", \"2PiRXqdqbY47WzG6CRzEIA\"]}\n        // onTiltChanged={(tilt) => console.log(`Tilt: ${tilt}`)} //vertical angle\n        // onFovChanged={(fov) => console.log(`FoV: ${fov}`)}  //zoom\n        onNodeChanged={(node) => {\n          console.log(\"Lat:\", node.latLon.lat, \"Long:\", node.latLon.lon);\n          setLatlong({ lat: node.latLon.lat, long: node.latLon.lon });\n        }}\n        // onBearingChanged={(bearing) => console.log(`Bearing: ${bearing}`)} //horiz angle\n      />\n    </div>\n  );\n}\n\nexport default Map;\n","/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Info.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":15,"column":10,"nodeType":"74","messageId":"75","endLine":15,"endColumn":20},{"ruleId":"76","severity":1,"message":"77","line":33,"column":6,"nodeType":"78","endLine":33,"endColumn":8,"suggestions":"79"},{"ruleId":"76","severity":1,"message":"80","line":35,"column":6,"nodeType":"78","endLine":35,"endColumn":8,"suggestions":"81"},{"ruleId":"76","severity":1,"message":"80","line":14,"column":6,"nodeType":"78","endLine":14,"endColumn":8,"suggestions":"82"},{"ruleId":"72","severity":1,"message":"83","line":14,"column":10,"nodeType":"74","messageId":"75","endLine":14,"endColumn":25},{"ruleId":"72","severity":1,"message":"84","line":14,"column":27,"nodeType":"74","messageId":"75","endLine":14,"endColumn":45},{"ruleId":"72","severity":1,"message":"85","line":1,"column":10,"nodeType":"74","messageId":"75","endLine":1,"endColumn":19},{"ruleId":"86","severity":1,"message":"87","line":283,"column":3,"nodeType":"88","messageId":"89","endLine":444,"endColumn":4},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'travelMode' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["92"],"React Hook useEffect has missing dependencies: 'api' and 'user.id'. Either include them or remove the dependency array.",["93"],["94"],"'showEnglishWord' is assigned a value but never used.","'setShowEnglishWord' is assigned a value but never used.","'useEffect' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"97","fix":"99"},"Update the dependencies array to be: [history]",{"range":"100","text":"101"},"Update the dependencies array to be: [api, user.id]",{"range":"102","text":"103"},{"range":"104","text":"103"},[892,894],"[history]",[1355,1357],"[api, user.id]",[406,408]]