{"ast":null,"code":"var _jsxFileName = \"/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/GuessForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction GuessForm({\n  address,\n  modalShowing,\n  setModalShowing\n}) {\n  _s();\n\n  const [guessAddress, setGuessAddress] = useState({\n    city: {\n      name: \"\",\n      status: \"\"\n    },\n    state: {\n      name: \"\",\n      status: \"\"\n    },\n    country: {\n      name: \"\",\n      status: \"\"\n    },\n    continent: {\n      name: \"\",\n      status: \"\"\n    }\n  });\n  const [revealed, setRevealed] = useState(false); // function continentEqual(guess, correct) {\n  //   if (correct === \"asia\" || correct === \"europe\") {\n  //     return guess === correct || guess === \"eurasia\";\n  //   } else if (correct === \"australia\" || correct === \"oceania\") {\n  //     return guess === \"australia\" || guess === \"oceania\";\n  //   } else {\n  //     return guess === correct;\n  //   }\n  // }\n\n  function countryEqual(guess, correct) {\n    if (correct === \"people's republic of china\") {\n      return guess === \"china\" || guess === correct;\n    } else if (correct === \"united states\") {\n      return guess === \"united states of america\" || guess === \"us\" || guess === \"usa\" || guess === \"u.s.\" || guess === \"u.s.a.\" || guess === correct;\n    } else {\n      return guess === correct;\n    }\n  }\n\n  function cityEqual(guess, correct) {\n    if (correct === \"macao\") {\n      return guess === \"macau\" || guess === \"macow\" || guess === correct;\n    } else if (correct === \"bengaluru\") {\n      return guess === \"bangalore\" || guess === correct;\n    } else if (correct === \"zürich\") {\n      return guess === \"zurich\" || guess === correct;\n    } else if (correct === \"são paulo\") {\n      return guess === \"sao paulo\" || guess === \"sao paolo\" || guess === correct;\n    } else {\n      return guess === correct;\n    }\n  }\n\n  function handleLocationGuess(e) {\n    e.preventDefault();\n\n    if (cityEqual(guessAddress.city.name.toLocaleLowerCase(), address.name.toLocaleLowerCase())) {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        city: {\n          name: guessAddress.city.name,\n          status: \"You guessed it!\"\n        }\n      }));\n    } else {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        city: {\n          name: guessAddress.city.name,\n          status: \"Not quite, try again!\"\n        }\n      }));\n    }\n\n    if (guessAddress.state.name.toLocaleLowerCase() === address.state.toLocaleLowerCase()) {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        state: {\n          name: guessAddress.state.name,\n          status: \"You guessed it!\"\n        }\n      }));\n    } else {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        state: {\n          name: guessAddress.state.name,\n          status: \"Not quite, try again!\"\n        }\n      }));\n    }\n\n    if (countryEqual(guessAddress.country.name.toLocaleLowerCase(), address.country.toLocaleLowerCase())) {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        country: {\n          name: guessAddress.country.name,\n          status: \"You guessed it!\"\n        }\n      }));\n    } else {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        country: {\n          name: guessAddress.country.name,\n          status: \"Not quite, try again!\"\n        }\n      }));\n    }\n\n    if (guessAddress.continent.name.toLocaleLowerCase() === address.continent.toLocaleLowerCase()) {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        continent: {\n          name: guessAddress.continent.name,\n          status: \"You guessed it!\"\n        }\n      }));\n    } else {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        continent: {\n          name: guessAddress.continent.name,\n          status: \"Not quite, try again!\"\n        }\n      }));\n    }\n\n    console.log(\"great guess!\");\n  }\n\n  function handleFormChange(e) {\n    const key = e.target.id;\n    const val = e.target.value;\n    setGuessAddress(guessAddress => ({ ...guessAddress,\n      [key]: {\n        name: val,\n        status: \"\"\n      }\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: modalShowing ? \"modal-bg bg-active\" : \"modal-bg\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"modal\",\n      onSubmit: handleLocationGuess,\n      children: [address.continent ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"continent\",\n          type: \"text\",\n          placeholder: \"Continent\",\n          value: guessAddress.continent.name,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), guessAddress.continent.status && guessAddress.continent.name ? /*#__PURE__*/_jsxDEV(\"small\", {\n          style: guessAddress.continent.status === \"You guessed it!\" ? {\n            color: \"green\",\n            backgroundColor: \"white\"\n          } : {\n            color: \"red\",\n            backgroundColor: \"white\"\n          },\n          children: guessAddress.continent.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this) : null, revealed ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: address.continent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"continent\",\n        type: \"text\",\n        placeholder: \"No Continent information available\",\n        readOnly: true,\n        value: guessAddress.continent.name,\n        style: {\n          color: \"white\",\n          backgroundColor: \"lightgrey\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), address.country ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"country\",\n          type: \"text\",\n          placeholder: \"Country\",\n          value: guessAddress.country.name,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), guessAddress.country.status && guessAddress.country.name ? /*#__PURE__*/_jsxDEV(\"small\", {\n          style: guessAddress.country.status === \"You guessed it!\" ? {\n            color: \"green\",\n            backgroundColor: \"white\"\n          } : {\n            color: \"red\",\n            backgroundColor: \"white\"\n          },\n          children: guessAddress.country.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this) : null, revealed ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: address.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"country\",\n        type: \"text\",\n        placeholder: \"No Country information available\",\n        readOnly: true,\n        value: guessAddress.country.name,\n        style: {\n          color: \"white\",\n          backgroundColor: \"lightgrey\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), address.state ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"state\",\n          type: \"text\",\n          placeholder: \"State/Region\",\n          value: guessAddress.state.name,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), guessAddress.state.status && guessAddress.state.name ? /*#__PURE__*/_jsxDEV(\"small\", {\n          style: guessAddress.state.status === \"You guessed it!\" ? {\n            color: \"green\",\n            backgroundColor: \"white\"\n          } : {\n            color: \"red\",\n            backgroundColor: \"white\"\n          },\n          children: guessAddress.state.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this) : null, revealed ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: address.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"state\",\n        type: \"text\",\n        placeholder: \"No State/Region information available\",\n        readOnly: true,\n        value: guessAddress.state.name,\n        style: {\n          color: \"white\",\n          backgroundColor: \"lightgrey\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), address.name ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"city\",\n          type: \"text\",\n          placeholder: \"City\",\n          value: guessAddress.city.name,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), guessAddress.city.status && guessAddress.city.name ? /*#__PURE__*/_jsxDEV(\"small\", {\n          style: guessAddress.city.status === \"You guessed it!\" ? {\n            color: \"green\",\n            backgroundColor: \"white\"\n          } : {\n            color: \"red\",\n            backgroundColor: \"white\"\n          },\n          children: guessAddress.city.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }, this) : null, revealed ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: address.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"city\",\n        type: \"text\",\n        placeholder: \"No City information available\",\n        readOnly: true,\n        value: guessAddress.city.name,\n        style: {\n          color: \"white\",\n          backgroundColor: \"lightgrey\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Check!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => setRevealed(!revealed),\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: revealed ? \"Hide\" : \"Reveal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close-mode-box\",\n        onClick: e => {\n          setRevealed(false);\n          setModalShowing(false);\n        },\n        style: {\n          color: \"yellow\",\n          backgroundColor: \"black\"\n        },\n        children: \"\\u2015\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GuessForm, \"uHTiLAaKjj4mMCaiwQzrhju7Eso=\");\n\n_c = GuessForm;\nexport default GuessForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"GuessForm\");","map":{"version":3,"sources":["/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/GuessForm.js"],"names":["React","useState","GuessForm","address","modalShowing","setModalShowing","guessAddress","setGuessAddress","city","name","status","state","country","continent","revealed","setRevealed","countryEqual","guess","correct","cityEqual","handleLocationGuess","e","preventDefault","toLocaleLowerCase","console","log","handleFormChange","key","target","id","val","value","color","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,YAAX;AAAyBC,EAAAA;AAAzB,CAAnB,EAA+D;AAAA;;AAC7D,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC;AAC/CO,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KADyC;AAE/CC,IAAAA,KAAK,EAAE;AAAEF,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAFwC;AAG/CE,IAAAA,OAAO,EAAE;AAAEH,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAHsC;AAI/CG,IAAAA,SAAS,EAAE;AAAEJ,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB;AAJoC,GAAD,CAAhD;AAMA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC,CAP6D,CAS7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAASe,YAAT,CAAsBC,KAAtB,EAA6BC,OAA7B,EAAsC;AACpC,QAAIA,OAAO,KAAK,4BAAhB,EAA8C;AAC5C,aAAOD,KAAK,KAAK,OAAV,IAAqBA,KAAK,KAAKC,OAAtC;AACD,KAFD,MAEO,IAAIA,OAAO,KAAK,eAAhB,EAAiC;AACtC,aACED,KAAK,KAAK,0BAAV,IACAA,KAAK,KAAK,IADV,IAEAA,KAAK,KAAK,KAFV,IAGAA,KAAK,KAAK,MAHV,IAIAA,KAAK,KAAK,QAJV,IAKAA,KAAK,KAAKC,OANZ;AAQD,KATM,MASA;AACL,aAAOD,KAAK,KAAKC,OAAjB;AACD;AACF;;AAED,WAASC,SAAT,CAAmBF,KAAnB,EAA0BC,OAA1B,EAAmC;AACjC,QAAIA,OAAO,KAAK,OAAhB,EAAyB;AACvB,aAAOD,KAAK,KAAK,OAAV,IAAqBA,KAAK,KAAK,OAA/B,IAA0CA,KAAK,KAAKC,OAA3D;AACD,KAFD,MAEO,IAAIA,OAAO,KAAK,WAAhB,EAA6B;AAClC,aAAOD,KAAK,KAAK,WAAV,IAAyBA,KAAK,KAAKC,OAA1C;AACD,KAFM,MAEA,IAAIA,OAAO,KAAK,QAAhB,EAA0B;AAC/B,aAAOD,KAAK,KAAK,QAAV,IAAsBA,KAAK,KAAKC,OAAvC;AACD,KAFM,MAEA,IAAIA,OAAO,KAAK,WAAhB,EAA6B;AAClC,aACED,KAAK,KAAK,WAAV,IAAyBA,KAAK,KAAK,WAAnC,IAAkDA,KAAK,KAAKC,OAD9D;AAGD,KAJM,MAIA;AACL,aAAOD,KAAK,KAAKC,OAAjB;AACD;AACF;;AAED,WAASE,mBAAT,CAA6BC,CAA7B,EAAgC;AAC9BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QACEH,SAAS,CACPb,YAAY,CAACE,IAAb,CAAkBC,IAAlB,CAAuBc,iBAAvB,EADO,EAEPpB,OAAO,CAACM,IAAR,CAAac,iBAAb,EAFO,CADX,EAKE;AACAhB,MAAAA,eAAe,CAAED,YAAD,KAAmB,EACjC,GAAGA,YAD8B;AAEjCE,QAAAA,IAAI,EAAE;AAAEC,UAAAA,IAAI,EAAEH,YAAY,CAACE,IAAb,CAAkBC,IAA1B;AAAgCC,UAAAA,MAAM,EAAE;AAAxC;AAF2B,OAAnB,CAAD,CAAf;AAID,KAVD,MAUO;AACLH,MAAAA,eAAe,CAAED,YAAD,KAAmB,EACjC,GAAGA,YAD8B;AAEjCE,QAAAA,IAAI,EAAE;AAAEC,UAAAA,IAAI,EAAEH,YAAY,CAACE,IAAb,CAAkBC,IAA1B;AAAgCC,UAAAA,MAAM,EAAE;AAAxC;AAF2B,OAAnB,CAAD,CAAf;AAID;;AACD,QACEJ,YAAY,CAACK,KAAb,CAAmBF,IAAnB,CAAwBc,iBAAxB,OACApB,OAAO,CAACQ,KAAR,CAAcY,iBAAd,EAFF,EAGE;AACAhB,MAAAA,eAAe,CAAED,YAAD,KAAmB,EACjC,GAAGA,YAD8B;AAEjCK,QAAAA,KAAK,EAAE;AAAEF,UAAAA,IAAI,EAAEH,YAAY,CAACK,KAAb,CAAmBF,IAA3B;AAAiCC,UAAAA,MAAM,EAAE;AAAzC;AAF0B,OAAnB,CAAD,CAAf;AAID,KARD,MAQO;AACLH,MAAAA,eAAe,CAAED,YAAD,KAAmB,EACjC,GAAGA,YAD8B;AAEjCK,QAAAA,KAAK,EAAE;AACLF,UAAAA,IAAI,EAAEH,YAAY,CAACK,KAAb,CAAmBF,IADpB;AAELC,UAAAA,MAAM,EAAE;AAFH;AAF0B,OAAnB,CAAD,CAAf;AAOD;;AACD,QACEM,YAAY,CACVV,YAAY,CAACM,OAAb,CAAqBH,IAArB,CAA0Bc,iBAA1B,EADU,EAEVpB,OAAO,CAACS,OAAR,CAAgBW,iBAAhB,EAFU,CADd,EAKE;AACAhB,MAAAA,eAAe,CAAED,YAAD,KAAmB,EACjC,GAAGA,YAD8B;AAEjCM,QAAAA,OAAO,EAAE;AAAEH,UAAAA,IAAI,EAAEH,YAAY,CAACM,OAAb,CAAqBH,IAA7B;AAAmCC,UAAAA,MAAM,EAAE;AAA3C;AAFwB,OAAnB,CAAD,CAAf;AAID,KAVD,MAUO;AACLH,MAAAA,eAAe,CAAED,YAAD,KAAmB,EACjC,GAAGA,YAD8B;AAEjCM,QAAAA,OAAO,EAAE;AACPH,UAAAA,IAAI,EAAEH,YAAY,CAACM,OAAb,CAAqBH,IADpB;AAEPC,UAAAA,MAAM,EAAE;AAFD;AAFwB,OAAnB,CAAD,CAAf;AAOD;;AACD,QACEJ,YAAY,CAACO,SAAb,CAAuBJ,IAAvB,CAA4Bc,iBAA5B,OACApB,OAAO,CAACU,SAAR,CAAkBU,iBAAlB,EAFF,EAGE;AACAhB,MAAAA,eAAe,CAAED,YAAD,KAAmB,EACjC,GAAGA,YAD8B;AAEjCO,QAAAA,SAAS,EAAE;AACTJ,UAAAA,IAAI,EAAEH,YAAY,CAACO,SAAb,CAAuBJ,IADpB;AAETC,UAAAA,MAAM,EAAE;AAFC;AAFsB,OAAnB,CAAD,CAAf;AAOD,KAXD,MAWO;AACLH,MAAAA,eAAe,CAAED,YAAD,KAAmB,EACjC,GAAGA,YAD8B;AAEjCO,QAAAA,SAAS,EAAE;AACTJ,UAAAA,IAAI,EAAEH,YAAY,CAACO,SAAb,CAAuBJ,IADpB;AAETC,UAAAA,MAAM,EAAE;AAFC;AAFsB,OAAnB,CAAD,CAAf;AAOD;;AACDc,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD;;AAED,WAASC,gBAAT,CAA0BL,CAA1B,EAA6B;AAC3B,UAAMM,GAAG,GAAGN,CAAC,CAACO,MAAF,CAASC,EAArB;AACA,UAAMC,GAAG,GAAGT,CAAC,CAACO,MAAF,CAASG,KAArB;AAEAxB,IAAAA,eAAe,CAAED,YAAD,KAAmB,EACjC,GAAGA,YAD8B;AAEjC,OAACqB,GAAD,GAAO;AAAElB,QAAAA,IAAI,EAAEqB,GAAR;AAAapB,QAAAA,MAAM,EAAE;AAArB;AAF0B,KAAnB,CAAD,CAAf;AAID;;AACD,sBACE;AAAK,IAAA,SAAS,EAAEN,YAAY,GAAG,oBAAH,GAA0B,UAAtD;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAwB,MAAA,QAAQ,EAAEgB,mBAAlC;AAAA,iBACGjB,OAAO,CAACU,SAAR,gBACC;AAAA,gCACE;AACE,UAAA,EAAE,EAAC,WADL;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAC,WAHd;AAIE,UAAA,KAAK,EAAEP,YAAY,CAACO,SAAb,CAAuBJ,IAJhC;AAKE,UAAA,QAAQ,EAAEiB;AALZ;AAAA;AAAA;AAAA;AAAA,gBADF,EAQGpB,YAAY,CAACO,SAAb,CAAuBH,MAAvB,IAAiCJ,YAAY,CAACO,SAAb,CAAuBJ,IAAxD,gBACC;AACE,UAAA,KAAK,EACHH,YAAY,CAACO,SAAb,CAAuBH,MAAvB,KAAkC,iBAAlC,GACI;AAAEsB,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,eAAe,EAAE;AAAnC,WADJ,GAEI;AAAED,YAAAA,KAAK,EAAE,KAAT;AAAgBC,YAAAA,eAAe,EAAE;AAAjC,WAJR;AAAA,oBAOG3B,YAAY,CAACO,SAAb,CAAuBH;AAP1B;AAAA;AAAA;AAAA;AAAA,gBADD,GAUG,IAlBN,EAmBGI,QAAQ,gBAAG;AAAA,oBAAMX,OAAO,CAACU;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAH,GAAoC,IAnB/C;AAAA,sBADD,gBAuBC;AACE,QAAA,EAAE,EAAC,WADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,oCAHd;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,KAAK,EAAEP,YAAY,CAACO,SAAb,CAAuBJ,IALhC;AAME,QAAA,KAAK,EAAE;AAAEuB,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,eAAe,EAAE;AAAnC;AANT;AAAA;AAAA;AAAA;AAAA,cAxBJ,EAkCG9B,OAAO,CAACS,OAAR,gBACC;AAAA,gCACE;AACE,UAAA,EAAE,EAAC,SADL;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAC,SAHd;AAIE,UAAA,KAAK,EAAEN,YAAY,CAACM,OAAb,CAAqBH,IAJ9B;AAKE,UAAA,QAAQ,EAAEiB;AALZ;AAAA;AAAA;AAAA;AAAA,gBADF,EAQGpB,YAAY,CAACM,OAAb,CAAqBF,MAArB,IAA+BJ,YAAY,CAACM,OAAb,CAAqBH,IAApD,gBACC;AACE,UAAA,KAAK,EACHH,YAAY,CAACM,OAAb,CAAqBF,MAArB,KAAgC,iBAAhC,GACI;AAAEsB,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,eAAe,EAAE;AAAnC,WADJ,GAEI;AAAED,YAAAA,KAAK,EAAE,KAAT;AAAgBC,YAAAA,eAAe,EAAE;AAAjC,WAJR;AAAA,oBAOG3B,YAAY,CAACM,OAAb,CAAqBF;AAPxB;AAAA;AAAA;AAAA;AAAA,gBADD,GAUG,IAlBN,EAmBGI,QAAQ,gBAAG;AAAA,oBAAMX,OAAO,CAACS;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAH,GAAkC,IAnB7C;AAAA,sBADD,gBAuBC;AACE,QAAA,EAAE,EAAC,SADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,kCAHd;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,KAAK,EAAEN,YAAY,CAACM,OAAb,CAAqBH,IAL9B;AAME,QAAA,KAAK,EAAE;AAAEuB,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,eAAe,EAAE;AAAnC;AANT;AAAA;AAAA;AAAA;AAAA,cAzDJ,EAmEG9B,OAAO,CAACQ,KAAR,gBACC;AAAA,gCACE;AACE,UAAA,EAAE,EAAC,OADL;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAC,cAHd;AAIE,UAAA,KAAK,EAAEL,YAAY,CAACK,KAAb,CAAmBF,IAJ5B;AAKE,UAAA,QAAQ,EAAEiB;AALZ;AAAA;AAAA;AAAA;AAAA,gBADF,EAQGpB,YAAY,CAACK,KAAb,CAAmBD,MAAnB,IAA6BJ,YAAY,CAACK,KAAb,CAAmBF,IAAhD,gBACC;AACE,UAAA,KAAK,EACHH,YAAY,CAACK,KAAb,CAAmBD,MAAnB,KAA8B,iBAA9B,GACI;AAAEsB,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,eAAe,EAAE;AAAnC,WADJ,GAEI;AAAED,YAAAA,KAAK,EAAE,KAAT;AAAgBC,YAAAA,eAAe,EAAE;AAAjC,WAJR;AAAA,oBAOG3B,YAAY,CAACK,KAAb,CAAmBD;AAPtB;AAAA;AAAA;AAAA;AAAA,gBADD,GAUG,IAlBN,EAmBGI,QAAQ,gBAAG;AAAA,oBAAMX,OAAO,CAACQ;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAH,GAAgC,IAnB3C;AAAA,sBADD,gBAuBC;AACE,QAAA,EAAE,EAAC,OADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,uCAHd;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,KAAK,EAAEL,YAAY,CAACK,KAAb,CAAmBF,IAL5B;AAME,QAAA,KAAK,EAAE;AAAEuB,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,eAAe,EAAE;AAAnC;AANT;AAAA;AAAA;AAAA;AAAA,cA1FJ,EAoGG9B,OAAO,CAACM,IAAR,gBACC;AAAA,gCACE;AACE,UAAA,EAAE,EAAC,MADL;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAC,MAHd;AAIE,UAAA,KAAK,EAAEH,YAAY,CAACE,IAAb,CAAkBC,IAJ3B;AAKE,UAAA,QAAQ,EAAEiB;AALZ;AAAA;AAAA;AAAA;AAAA,gBADF,EAQGpB,YAAY,CAACE,IAAb,CAAkBE,MAAlB,IAA4BJ,YAAY,CAACE,IAAb,CAAkBC,IAA9C,gBACC;AACE,UAAA,KAAK,EACHH,YAAY,CAACE,IAAb,CAAkBE,MAAlB,KAA6B,iBAA7B,GACI;AAAEsB,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,eAAe,EAAE;AAAnC,WADJ,GAEI;AAAED,YAAAA,KAAK,EAAE,KAAT;AAAgBC,YAAAA,eAAe,EAAE;AAAjC,WAJR;AAAA,oBAOG3B,YAAY,CAACE,IAAb,CAAkBE;AAPrB;AAAA;AAAA;AAAA;AAAA,gBADD,GAUG,IAlBN,EAmBGI,QAAQ,gBAAG;AAAA,oBAAMX,OAAO,CAACM;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAH,GAA+B,IAnB1C;AAAA,sBADD,gBAuBC;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,+BAHd;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,KAAK,EAAEH,YAAY,CAACE,IAAb,CAAkBC,IAL3B;AAME,QAAA,KAAK,EAAE;AAAEuB,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,eAAe,EAAE;AAAnC;AANT;AAAA;AAAA;AAAA;AAAA,cA3HJ,eAoIE;AAAA,gCACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAQ,UAAA,OAAO,EAAGZ,CAAD,IAAON,WAAW,CAAC,CAACD,QAAF,CAAnC;AAAA,iCACE;AAAA,mCACE;AAAA,wBAAKA,QAAQ,GAAG,MAAH,GAAY;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cApIF,eA6IE;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,OAAO,EAAGO,CAAD,IAAO;AACdN,UAAAA,WAAW,CAAC,KAAD,CAAX;AACAV,UAAAA,eAAe,CAAC,KAAD,CAAf;AACD,SALH;AAME,QAAA,KAAK,EAAE;AAAE2B,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,eAAe,EAAE;AAApC,SANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7IF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4JD;;GAvSQ/B,S;;KAAAA,S;AAyST,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction GuessForm({ address, modalShowing, setModalShowing }) {\n  const [guessAddress, setGuessAddress] = useState({\n    city: { name: \"\", status: \"\" },\n    state: { name: \"\", status: \"\" },\n    country: { name: \"\", status: \"\" },\n    continent: { name: \"\", status: \"\" },\n  });\n  const [revealed, setRevealed] = useState(false);\n\n  // function continentEqual(guess, correct) {\n  //   if (correct === \"asia\" || correct === \"europe\") {\n  //     return guess === correct || guess === \"eurasia\";\n  //   } else if (correct === \"australia\" || correct === \"oceania\") {\n  //     return guess === \"australia\" || guess === \"oceania\";\n  //   } else {\n  //     return guess === correct;\n  //   }\n  // }\n\n  function countryEqual(guess, correct) {\n    if (correct === \"people's republic of china\") {\n      return guess === \"china\" || guess === correct;\n    } else if (correct === \"united states\") {\n      return (\n        guess === \"united states of america\" ||\n        guess === \"us\" ||\n        guess === \"usa\" ||\n        guess === \"u.s.\" ||\n        guess === \"u.s.a.\" ||\n        guess === correct\n      );\n    } else {\n      return guess === correct;\n    }\n  }\n\n  function cityEqual(guess, correct) {\n    if (correct === \"macao\") {\n      return guess === \"macau\" || guess === \"macow\" || guess === correct;\n    } else if (correct === \"bengaluru\") {\n      return guess === \"bangalore\" || guess === correct;\n    } else if (correct === \"zürich\") {\n      return guess === \"zurich\" || guess === correct;\n    } else if (correct === \"são paulo\") {\n      return (\n        guess === \"sao paulo\" || guess === \"sao paolo\" || guess === correct\n      );\n    } else {\n      return guess === correct;\n    }\n  }\n\n  function handleLocationGuess(e) {\n    e.preventDefault();\n\n    if (\n      cityEqual(\n        guessAddress.city.name.toLocaleLowerCase(),\n        address.name.toLocaleLowerCase()\n      )\n    ) {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        city: { name: guessAddress.city.name, status: \"You guessed it!\" },\n      }));\n    } else {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        city: { name: guessAddress.city.name, status: \"Not quite, try again!\" },\n      }));\n    }\n    if (\n      guessAddress.state.name.toLocaleLowerCase() ===\n      address.state.toLocaleLowerCase()\n    ) {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        state: { name: guessAddress.state.name, status: \"You guessed it!\" },\n      }));\n    } else {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        state: {\n          name: guessAddress.state.name,\n          status: \"Not quite, try again!\",\n        },\n      }));\n    }\n    if (\n      countryEqual(\n        guessAddress.country.name.toLocaleLowerCase(),\n        address.country.toLocaleLowerCase()\n      )\n    ) {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        country: { name: guessAddress.country.name, status: \"You guessed it!\" },\n      }));\n    } else {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        country: {\n          name: guessAddress.country.name,\n          status: \"Not quite, try again!\",\n        },\n      }));\n    }\n    if (\n      guessAddress.continent.name.toLocaleLowerCase() ===\n      address.continent.toLocaleLowerCase()\n    ) {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        continent: {\n          name: guessAddress.continent.name,\n          status: \"You guessed it!\",\n        },\n      }));\n    } else {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        continent: {\n          name: guessAddress.continent.name,\n          status: \"Not quite, try again!\",\n        },\n      }));\n    }\n    console.log(\"great guess!\");\n  }\n\n  function handleFormChange(e) {\n    const key = e.target.id;\n    const val = e.target.value;\n\n    setGuessAddress((guessAddress) => ({\n      ...guessAddress,\n      [key]: { name: val, status: \"\" },\n    }));\n  }\n  return (\n    <div className={modalShowing ? \"modal-bg bg-active\" : \"modal-bg\"}>\n      <form className=\"modal\" onSubmit={handleLocationGuess}>\n        {address.continent ? (\n          <>\n            <input\n              id=\"continent\"\n              type=\"text\"\n              placeholder=\"Continent\"\n              value={guessAddress.continent.name}\n              onChange={handleFormChange}\n            ></input>\n            {guessAddress.continent.status && guessAddress.continent.name ? (\n              <small\n                style={\n                  guessAddress.continent.status === \"You guessed it!\"\n                    ? { color: \"green\", backgroundColor: \"white\" }\n                    : { color: \"red\", backgroundColor: \"white\" }\n                }\n              >\n                {guessAddress.continent.status}\n              </small>\n            ) : null}\n            {revealed ? <div>{address.continent}</div> : null}\n          </>\n        ) : (\n          <input\n            id=\"continent\"\n            type=\"text\"\n            placeholder=\"No Continent information available\"\n            readOnly\n            value={guessAddress.continent.name}\n            style={{ color: \"white\", backgroundColor: \"lightgrey\" }}\n          ></input>\n        )}\n\n        {address.country ? (\n          <>\n            <input\n              id=\"country\"\n              type=\"text\"\n              placeholder=\"Country\"\n              value={guessAddress.country.name}\n              onChange={handleFormChange}\n            ></input>\n            {guessAddress.country.status && guessAddress.country.name ? (\n              <small\n                style={\n                  guessAddress.country.status === \"You guessed it!\"\n                    ? { color: \"green\", backgroundColor: \"white\" }\n                    : { color: \"red\", backgroundColor: \"white\" }\n                }\n              >\n                {guessAddress.country.status}\n              </small>\n            ) : null}\n            {revealed ? <div>{address.country}</div> : null}\n          </>\n        ) : (\n          <input\n            id=\"country\"\n            type=\"text\"\n            placeholder=\"No Country information available\"\n            readOnly\n            value={guessAddress.country.name}\n            style={{ color: \"white\", backgroundColor: \"lightgrey\" }}\n          ></input>\n        )}\n\n        {address.state ? (\n          <>\n            <input\n              id=\"state\"\n              type=\"text\"\n              placeholder=\"State/Region\"\n              value={guessAddress.state.name}\n              onChange={handleFormChange}\n            ></input>\n            {guessAddress.state.status && guessAddress.state.name ? (\n              <small\n                style={\n                  guessAddress.state.status === \"You guessed it!\"\n                    ? { color: \"green\", backgroundColor: \"white\" }\n                    : { color: \"red\", backgroundColor: \"white\" }\n                }\n              >\n                {guessAddress.state.status}\n              </small>\n            ) : null}\n            {revealed ? <div>{address.state}</div> : null}\n          </>\n        ) : (\n          <input\n            id=\"state\"\n            type=\"text\"\n            placeholder=\"No State/Region information available\"\n            readOnly\n            value={guessAddress.state.name}\n            style={{ color: \"white\", backgroundColor: \"lightgrey\" }}\n          ></input>\n        )}\n\n        {address.name ? (\n          <>\n            <input\n              id=\"city\"\n              type=\"text\"\n              placeholder=\"City\"\n              value={guessAddress.city.name}\n              onChange={handleFormChange}\n            ></input>\n            {guessAddress.city.status && guessAddress.city.name ? (\n              <small\n                style={\n                  guessAddress.city.status === \"You guessed it!\"\n                    ? { color: \"green\", backgroundColor: \"white\" }\n                    : { color: \"red\", backgroundColor: \"white\" }\n                }\n              >\n                {guessAddress.city.status}\n              </small>\n            ) : null}\n            {revealed ? <div>{address.name}</div> : null}\n          </>\n        ) : (\n          <input\n            id=\"city\"\n            type=\"text\"\n            placeholder=\"No City information available\"\n            readOnly\n            value={guessAddress.city.name}\n            style={{ color: \"white\", backgroundColor: \"lightgrey\" }}\n          ></input>\n        )}\n        <span>\n          <button type=\"submit\">Check!</button>\n\n          <button onClick={(e) => setRevealed(!revealed)}>\n            <small>\n              <em>{revealed ? \"Hide\" : \"Reveal\"}</em>\n            </small>\n          </button>\n        </span>\n        <span\n          className=\"close-mode-box\"\n          onClick={(e) => {\n            setRevealed(false);\n            setModalShowing(false);\n          }}\n          style={{ color: \"yellow\", backgroundColor: \"black\" }}\n        >\n          ―\n        </span>\n      </form>\n    </div>\n  );\n}\n\nexport default GuessForm;\n"]},"metadata":{},"sourceType":"module"}