{"ast":null,"code":"var _jsxFileName = \"/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat({\n  setChatShowing\n}) {\n  _s();\n\n  const [messages, setMessages] = useState([{\n    who: \"user\",\n    text: \"hey..\"\n  }, {\n    who: \"bot\",\n    text: \"welcome to the world\"\n  }]);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  function handleSend(e) {\n    e.preventDefault();\n    setMessages(messages => [...messages, {\n      who: \"user\",\n      text: newMessage\n    }]);\n    setNewMessage(\"\");\n    botReply();\n  }\n\n  function botReply() {\n    //maybe add a small delay\n    setMessages(messages => [...messages, {\n      who: \"bot\",\n      text: \"well aren't you just the sweetest\"\n    }]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chatbox\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      id: \"chat-header\",\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), messages.map(m => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", m.who === \"bot\" ? \"ðŸ¤–\" + m.text : m.text + \"ðŸ™‚\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSend,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"reply...\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: \"green\",\n            color: \"white\"\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"close-mode-box\",\n      onClick: e => setChatShowing(false),\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"eZlD1Zud3knOOwBzQZTkIsUTK4s=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Chat.js"],"names":["React","useState","Chat","setChatShowing","messages","setMessages","who","text","newMessage","setNewMessage","handleSend","e","preventDefault","botReply","map","m","target","value","backgroundColor","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAkC;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,CACvC;AAAEK,IAAAA,GAAG,EAAE,MAAP;AAAeC,IAAAA,IAAI,EAAE;AAArB,GADuC,EAEvC;AAAED,IAAAA,GAAG,EAAE,KAAP;AAAcC,IAAAA,IAAI,EAAE;AAApB,GAFuC,CAAD,CAAxC;AAIA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;;AAEA,WAASS,UAAT,CAAoBC,CAApB,EAAuB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,WAAW,CAAED,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAc;AAAEE,MAAAA,GAAG,EAAE,MAAP;AAAeC,MAAAA,IAAI,EAAEC;AAArB,KAAd,CAAf,CAAX;AACAC,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAI,IAAAA,QAAQ;AACT;;AAED,WAASA,QAAT,GAAoB;AAClB;AACAR,IAAAA,WAAW,CAAED,QAAD,IAAc,CACxB,GAAGA,QADqB,EAExB;AAAEE,MAAAA,GAAG,EAAE,KAAP;AAAcC,MAAAA,IAAI,EAAE;AAApB,KAFwB,CAAf,CAAX;AAID;;AAED,sBACE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA,4BACE;AAAI,MAAA,EAAE,EAAC,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGH,QAAQ,CAACU,GAAT,CAAcC,CAAD,IAAO;AACnB,0BAAO;AAAA,wBAAOA,CAAC,CAACT,GAAF,KAAU,KAAV,GAAkB,OAAOS,CAAC,CAACR,IAA3B,GAAkCQ,CAAC,CAACR,IAAF,GAAS,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA,CAFH,eAME;AAAM,MAAA,QAAQ,EAAEG,UAAhB;AAAA,6BAEE;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,UAFd;AAGE,UAAA,KAAK,EAAEF,UAHT;AAIE,UAAA,QAAQ,EAAGG,CAAD,IAAOF,aAAa,CAACE,CAAC,CAACK,MAAF,CAASC,KAAV;AAJhC;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAQ,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAE,OAAnB;AAA4BC,YAAAA,KAAK,EAAE;AAAnC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YANF,eAoBE;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAiC,MAAA,OAAO,EAAGR,CAAD,IAAOR,cAAc,CAAC,KAAD,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAhDQD,I;;KAAAA,I;AAkDT,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Chat({ setChatShowing }) {\n  const [messages, setMessages] = useState([\n    { who: \"user\", text: \"hey..\" },\n    { who: \"bot\", text: \"welcome to the world\" },\n  ]);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  function handleSend(e) {\n    e.preventDefault();\n    setMessages((messages) => [...messages, { who: \"user\", text: newMessage }]);\n    setNewMessage(\"\");\n    botReply();\n  }\n\n  function botReply() {\n    //maybe add a small delay\n    setMessages((messages) => [\n      ...messages,\n      { who: \"bot\", text: \"well aren't you just the sweetest\" },\n    ]);\n  }\n\n  return (\n    <div id=\"chatbox\">\n      <h3 id=\"chat-header\">Chat</h3>\n      {messages.map((m) => {\n        return <div> {m.who === \"bot\" ? \"ðŸ¤–\" + m.text : m.text + \"ðŸ™‚\"} </div>;\n      })}\n\n      <form onSubmit={handleSend}>\n        {/* how do i get the send button on the same line as the input box ? */}\n        <span>\n          <input\n            type=\"text\"\n            placeholder=\"reply...\"\n            value={newMessage}\n            onChange={(e) => setNewMessage(e.target.value)}\n          ></input>\n          <button style={{ backgroundColor: \"green\", color: \"white\" }}>\n            Send\n          </button>\n        </span>\n      </form>\n      <span className=\"close-mode-box\" onClick={(e) => setChatShowing(false)}>\n        x\n      </span>\n    </div>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}