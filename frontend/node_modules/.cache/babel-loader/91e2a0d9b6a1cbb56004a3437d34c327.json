{"ast":null,"code":"var _jsxFileName = \"/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Travelling.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Chat from \"./Chat\";\nimport Map from \"./Map\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Travelling({\n  travelMode,\n  api\n}) {\n  _s();\n\n  const [modalShowing, setModalShowing] = useState(false);\n  const [chatShowing, setChatShowing] = useState(false);\n  const [address, setAddress] = useState({\n    city: \"\",\n    state: \"\",\n    country: \"\",\n    continent: \"\"\n  });\n  const [guessAddress, setGuessAddress] = useState({\n    city: {\n      name: \"\",\n      status: \"\"\n    },\n    state: {\n      name: \"\",\n      status: \"\"\n    },\n    country: {\n      name: \"\",\n      status: \"\"\n    },\n    continent: {\n      name: \"\",\n      status: \"\"\n    }\n  });\n  const [messages, setMessages] = useState([{\n    who: \"user\",\n    text: \"hey..\"\n  }, {\n    who: \"bot\",\n    text: \"welcome to the world\"\n  }]);\n  const history = useHistory();\n  console.log(travelMode);\n\n  function handleLocationGuess(e) {\n    e.preventDefault();\n    console.log(\"great guess!\");\n  }\n\n  function handleFormChange(e) {\n    const key = e.target.id;\n    const val = e.target.value;\n    setGuessAddress(guessAddress => ({ ...guessAddress,\n      [key]: val\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"content\",\n        children: [travelMode, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: travelMode === \"Tourism\" ? \"Roam around freely!\" : travelMode === \"Find Yourself\" ? \"Guess your location!\" : \"Find your way to a GIVEN-PLACE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content content-button\",\n        onClick: () => history.push(\"/\"),\n        children: \"Warp Back to Airport\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), travelMode === \"Find Yourself\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content content-button\",\n        onClick: () => setModalShowing(true),\n        children: \"Make a guess!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content content-button\",\n        onClick: () => setChatShowing(true),\n        children: \"Chat with a local\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), chatShowing ? /*#__PURE__*/_jsxDEV(Chat, {\n        setChatShowing: setChatShowing,\n        messages: messages,\n        setMessages: setMessages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        api: api,\n        address: address,\n        setAddress: setAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), travelMode === \"Find Yourself\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: modalShowing ? \"modal-bg bg-active\" : \"modal-bg\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modal\",\n        onSubmit: handleLocationGuess,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"continent\",\n          type: \"text\",\n          placeholder: \"Continent\",\n          value: guessAddress.continent,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"country\",\n          type: \"text\",\n          placeholder: \"Country\",\n          value: guessAddress.country,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"state\",\n          type: \"text\",\n          placeholder: \"State/Locality\",\n          value: guessAddress.state,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"city\",\n          type: \"text\",\n          placeholder: \"City/Sublocality\",\n          value: guessAddress.city,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Check!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-mode-box\",\n          onClick: e => setModalShowing(false),\n          children: \"nvm lol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Travelling, \"cnK1b7yFDzBJz7UH5wDqPJKVrlY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Travelling;\nexport default Travelling;\n\nvar _c;\n\n$RefreshReg$(_c, \"Travelling\");","map":{"version":3,"sources":["/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Travelling.js"],"names":["React","useState","useHistory","Chat","Map","Travelling","travelMode","api","modalShowing","setModalShowing","chatShowing","setChatShowing","address","setAddress","city","state","country","continent","guessAddress","setGuessAddress","name","status","messages","setMessages","who","text","history","console","log","handleLocationGuess","e","preventDefault","handleFormChange","key","target","id","val","value","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAApB,EAAyC;AAAA;;AACvC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC;AACrCa,IAAAA,IAAI,EAAE,EAD+B;AAErCC,IAAAA,KAAK,EAAE,EAF8B;AAGrCC,IAAAA,OAAO,EAAE,EAH4B;AAIrCC,IAAAA,SAAS,EAAE;AAJ0B,GAAD,CAAtC;AAMA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC;AAC/Ca,IAAAA,IAAI,EAAE;AAAEM,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KADyC;AAE/CN,IAAAA,KAAK,EAAE;AAAEK,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAFwC;AAG/CL,IAAAA,OAAO,EAAE;AAAEI,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAHsC;AAI/CJ,IAAAA,SAAS,EAAE;AAAEG,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB;AAJoC,GAAD,CAAhD;AAOA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,CACvC;AAAEuB,IAAAA,GAAG,EAAE,MAAP;AAAeC,IAAAA,IAAI,EAAE;AAArB,GADuC,EAEvC;AAAED,IAAAA,GAAG,EAAE,KAAP;AAAcC,IAAAA,IAAI,EAAE;AAApB,GAFuC,CAAD,CAAxC;AAIA,QAAMC,OAAO,GAAGxB,UAAU,EAA1B;AACAyB,EAAAA,OAAO,CAACC,GAAR,CAAYtB,UAAZ;;AAEA,WAASuB,mBAAT,CAA6BC,CAA7B,EAAgC;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD;;AAED,WAASI,gBAAT,CAA0BF,CAA1B,EAA6B;AAC3B,UAAMG,GAAG,GAAGH,CAAC,CAACI,MAAF,CAASC,EAArB;AACA,UAAMC,GAAG,GAAGN,CAAC,CAACI,MAAF,CAASG,KAArB;AAEAlB,IAAAA,eAAe,CAAED,YAAD,KAAmB,EAAE,GAAGA,YAAL;AAAmB,OAACe,GAAD,GAAOG;AAA1B,KAAnB,CAAD,CAAf;AACD;;AAED,sBACE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA,4BACE;AAAA,8BAEE;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA,mBAAyB9B,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBACGA,UAAU,KAAK,SAAf,GACG,qBADH,GAEGA,UAAU,KAAK,eAAf,GACA,sBADA,GAEA;AALN;AAAA;AAAA;AAAA;AAAA,cAHF,eAUE;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AACE,QAAA,SAAS,EAAC,wBADZ;AAEE,QAAA,OAAO,EAAE,MAAMoB,OAAO,CAACY,IAAR,CAAa,GAAb,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,EAiBGhC,UAAU,KAAK,eAAf,gBACC;AACE,QAAA,SAAS,EAAC,wBADZ;AAEE,QAAA,OAAO,EAAE,MAAMG,eAAe,CAAC,IAAD,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAOG,IAxBN,eAyBE;AACE,QAAA,SAAS,EAAC,wBADZ;AAEE,QAAA,OAAO,EAAE,MAAME,cAAc,CAAC,IAAD,CAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF,EA+BGD,WAAW,gBACV,QAAC,IAAD;AACE,QAAA,cAAc,EAAEC,cADlB;AAEE,QAAA,QAAQ,EAAEW,QAFZ;AAGE,QAAA,WAAW,EAAEC;AAHf;AAAA;AAAA;AAAA;AAAA,cADU,GAMR,IArCN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAwCE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,GAAG,EAAEhB,GAAV;AAAe,QAAA,OAAO,EAAEK,OAAxB;AAAiC,QAAA,UAAU,EAAEC;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAxCF,EA4CGP,UAAU,KAAK,eAAf,gBACC;AAAK,MAAA,SAAS,EAAEE,YAAY,GAAG,oBAAH,GAA0B,UAAtD;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAwB,QAAA,QAAQ,EAAEqB,mBAAlC;AAAA,gCACE;AACE,UAAA,EAAE,EAAC,WADL;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAC,WAHd;AAIE,UAAA,KAAK,EAAEX,YAAY,CAACD,SAJtB;AAKE,UAAA,QAAQ,EAAEe;AALZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AACE,UAAA,EAAE,EAAC,SADL;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAC,SAHd;AAIE,UAAA,KAAK,EAAEd,YAAY,CAACF,OAJtB;AAKE,UAAA,QAAQ,EAAEgB;AALZ;AAAA;AAAA;AAAA;AAAA,gBARF,eAeE;AACE,UAAA,EAAE,EAAC,OADL;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAC,gBAHd;AAIE,UAAA,KAAK,EAAEd,YAAY,CAACH,KAJtB;AAKE,UAAA,QAAQ,EAAEiB;AALZ;AAAA;AAAA;AAAA;AAAA,gBAfF,eAsBE;AACE,UAAA,EAAE,EAAC,MADL;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAC,kBAHd;AAIE,UAAA,KAAK,EAAEd,YAAY,CAACJ,IAJtB;AAKE,UAAA,QAAQ,EAAEkB;AALZ;AAAA;AAAA;AAAA;AAAA,gBAtBF,eA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BF,eA8BE;AACE,UAAA,SAAS,EAAC,gBADZ;AAEE,UAAA,OAAO,EAAGF,CAAD,IAAOrB,eAAe,CAAC,KAAD,CAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,GAwCG,IApFN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwFD;;GA3HQJ,U;UAoBSH,U;;;KApBTG,U;AA6HT,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Chat from \"./Chat\";\nimport Map from \"./Map\";\n\nfunction Travelling({ travelMode, api }) {\n  const [modalShowing, setModalShowing] = useState(false);\n  const [chatShowing, setChatShowing] = useState(false);\n  const [address, setAddress] = useState({\n    city: \"\",\n    state: \"\",\n    country: \"\",\n    continent: \"\",\n  });\n  const [guessAddress, setGuessAddress] = useState({\n    city: { name: \"\", status: \"\" },\n    state: { name: \"\", status: \"\" },\n    country: { name: \"\", status: \"\" },\n    continent: { name: \"\", status: \"\" },\n  });\n\n  const [messages, setMessages] = useState([\n    { who: \"user\", text: \"hey..\" },\n    { who: \"bot\", text: \"welcome to the world\" },\n  ]);\n  const history = useHistory();\n  console.log(travelMode);\n\n  function handleLocationGuess(e) {\n    e.preventDefault();\n    console.log(\"great guess!\");\n  }\n\n  function handleFormChange(e) {\n    const key = e.target.id;\n    const val = e.target.value;\n\n    setGuessAddress((guessAddress) => ({ ...guessAddress, [key]: val }));\n  }\n\n  return (\n    <div id=\"wrapper\">\n      <div>\n        {/* the line below gives an issue when you refresh the page, because you got here without props, because state reset... */}\n        <h3 className=\"content\">{travelMode}!</h3>\n        <div className=\"content\">\n          {travelMode === \"Tourism\"\n            ? \"Roam around freely!\"\n            : travelMode === \"Find Yourself\"\n            ? \"Guess your location!\"\n            : \"Find your way to a GIVEN-PLACE\"}\n        </div>\n        <br></br>\n        <div\n          className=\"content content-button\"\n          onClick={() => history.push(\"/\")}\n        >\n          Warp Back to Airport\n        </div>\n        {travelMode === \"Find Yourself\" ? (\n          <div\n            className=\"content content-button\"\n            onClick={() => setModalShowing(true)}\n          >\n            Make a guess!\n          </div>\n        ) : null}\n        <div\n          className=\"content content-button\"\n          onClick={() => setChatShowing(true)}\n        >\n          Chat with a local\n        </div>\n        {chatShowing ? (\n          <Chat\n            setChatShowing={setChatShowing}\n            messages={messages}\n            setMessages={setMessages}\n          />\n        ) : null}\n      </div>\n      <div className=\"background\">\n        <Map api={api} address={address} setAddress={setAddress} />\n      </div>\n\n      {travelMode === \"Find Yourself\" ? (\n        <div className={modalShowing ? \"modal-bg bg-active\" : \"modal-bg\"}>\n          <form className=\"modal\" onSubmit={handleLocationGuess}>\n            <input\n              id=\"continent\"\n              type=\"text\"\n              placeholder=\"Continent\"\n              value={guessAddress.continent}\n              onChange={handleFormChange}\n            ></input>\n            <input\n              id=\"country\"\n              type=\"text\"\n              placeholder=\"Country\"\n              value={guessAddress.country}\n              onChange={handleFormChange}\n            ></input>\n            <input\n              id=\"state\"\n              type=\"text\"\n              placeholder=\"State/Locality\"\n              value={guessAddress.state}\n              onChange={handleFormChange}\n            ></input>\n            <input\n              id=\"city\"\n              type=\"text\"\n              placeholder=\"City/Sublocality\"\n              value={guessAddress.city}\n              onChange={handleFormChange}\n            ></input>\n            <button>Check!</button>\n            <span\n              className=\"close-mode-box\"\n              onClick={(e) => setModalShowing(false)}\n            >\n              nvm lol\n            </span>\n          </form>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default Travelling;\n"]},"metadata":{},"sourceType":"module"}