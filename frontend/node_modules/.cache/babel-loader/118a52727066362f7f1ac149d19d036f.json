{"ast":null,"code":"var _jsxFileName = \"/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/GuessForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GuessForm() {\n  _s();\n\n  const [guessAddress, setGuessAddress] = useState({\n    city: {\n      name: \"\",\n      status: \"\"\n    },\n    state: {\n      name: \"\",\n      status: \"\"\n    },\n    country: {\n      name: \"\",\n      status: \"\"\n    },\n    continent: {\n      name: \"\",\n      status: \"\"\n    }\n  }); // function continentEqual(guess, correct) {\n  //   if (correct === \"asia\" || correct === \"europe\") {\n  //     return guess === correct || guess === \"eurasia\";\n  //   } else if (correct === \"australia\" || correct === \"oceania\") {\n  //     return guess === \"australia\" || guess === \"oceania\";\n  //   } else {\n  //     return guess === correct;\n  //   }\n  // }\n\n  function handleLocationGuess(e) {\n    e.preventDefault();\n\n    if (guessAddress.city.name === address.city) {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        city: {\n          name: guessAddress.city.name,\n          status: \"You guessed it!\"\n        }\n      }));\n    } else {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        city: {\n          name: guessAddress.city.name,\n          status: \"Not quite, try again!\"\n        }\n      }));\n    }\n\n    if (guessAddress.state.name === address.state) {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        state: {\n          name: guessAddress.state.name,\n          status: \"You guessed it!\"\n        }\n      }));\n    } else {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        state: {\n          name: guessAddress.state.name,\n          status: \"Not quite, try again!\"\n        }\n      }));\n    }\n\n    if (guessAddress.country.name === address.country) {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        country: {\n          name: guessAddress.country.name,\n          status: \"You guessed it!\"\n        }\n      }));\n    } else {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        country: {\n          name: guessAddress.country.name,\n          status: \"Not quite, try again!\"\n        }\n      }));\n    }\n\n    if (guessAddress.continent.name === address.continent) {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        continent: {\n          name: guessAddress.continent.name,\n          status: \"You guessed it!\"\n        }\n      }));\n    } else {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        continent: {\n          name: guessAddress.continent.name,\n          status: \"Not quite, try again!\"\n        }\n      }));\n    }\n\n    console.log(\"great guess!\");\n  }\n\n  function handleFormChange(e) {\n    const key = e.target.id;\n    const val = e.target.value;\n    setGuessAddress(guessAddress => ({ ...guessAddress,\n      [key]: {\n        name: val,\n        status: \"\"\n      }\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: modalShowing ? \"modal-bg bg-active\" : \"modal-bg\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"modal\",\n      onSubmit: handleLocationGuess,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"continent\",\n        type: \"text\",\n        placeholder: \"Continent\",\n        value: guessAddress.continent.name,\n        onChange: handleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), guessAddress.continent.status ? /*#__PURE__*/_jsxDEV(\"small\", {\n        style: guessAddress.continent.status === \"You guessed it!\" ? {\n          color: \"green\",\n          backgroundColor: \"white\"\n        } : {\n          color: \"red\",\n          backgroundColor: \"white\"\n        },\n        children: guessAddress.continent.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"country\",\n        type: \"text\",\n        placeholder: \"Country\",\n        value: guessAddress.country.name,\n        onChange: handleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), guessAddress.country.status ? /*#__PURE__*/_jsxDEV(\"small\", {\n        style: guessAddress.country.status === \"You guessed it!\" ? {\n          color: \"green\",\n          backgroundColor: \"white\"\n        } : {\n          color: \"red\",\n          backgroundColor: \"white\"\n        },\n        children: guessAddress.country.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"state\",\n        type: \"text\",\n        placeholder: \"State/Locality\",\n        value: guessAddress.state.name,\n        onChange: handleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), guessAddress.state.status ? /*#__PURE__*/_jsxDEV(\"small\", {\n        style: guessAddress.state.status === \"You guessed it!\" ? {\n          color: \"green\",\n          backgroundColor: \"white\"\n        } : {\n          color: \"red\",\n          backgroundColor: \"white\"\n        },\n        children: guessAddress.state.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"city\",\n        type: \"text\",\n        placeholder: \"City/Sublocality\",\n        value: guessAddress.city.name,\n        onChange: handleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), guessAddress.city.status ? /*#__PURE__*/_jsxDEV(\"small\", {\n        style: guessAddress.city.status === \"You guessed it!\" ? {\n          color: \"green\",\n          backgroundColor: \"white\"\n        } : {\n          color: \"red\",\n          backgroundColor: \"white\"\n        },\n        children: guessAddress.city.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Check!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close-mode-box\",\n        onClick: e => setModalShowing(false),\n        children: \"nvm lol\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GuessForm, \"1IQF+QMY0KowHCn1yj5j9gCWkTw=\");\n\n_c = GuessForm;\nexport default GuessForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"GuessForm\");","map":{"version":3,"sources":["/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/GuessForm.js"],"names":["React","GuessForm","guessAddress","setGuessAddress","useState","city","name","status","state","country","continent","handleLocationGuess","e","preventDefault","address","console","log","handleFormChange","key","target","id","val","value","modalShowing","color","backgroundColor","setModalShowing"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nfunction GuessForm() {\n  const [guessAddress, setGuessAddress] = useState({\n    city: { name: \"\", status: \"\" },\n    state: { name: \"\", status: \"\" },\n    country: { name: \"\", status: \"\" },\n    continent: { name: \"\", status: \"\" },\n  });\n\n  // function continentEqual(guess, correct) {\n  //   if (correct === \"asia\" || correct === \"europe\") {\n  //     return guess === correct || guess === \"eurasia\";\n  //   } else if (correct === \"australia\" || correct === \"oceania\") {\n  //     return guess === \"australia\" || guess === \"oceania\";\n  //   } else {\n  //     return guess === correct;\n  //   }\n  // }\n\n  function handleLocationGuess(e) {\n    e.preventDefault();\n\n    if (guessAddress.city.name === address.city) {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        city: { name: guessAddress.city.name, status: \"You guessed it!\" },\n      }));\n    } else {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        city: { name: guessAddress.city.name, status: \"Not quite, try again!\" },\n      }));\n    }\n    if (guessAddress.state.name === address.state) {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        state: { name: guessAddress.state.name, status: \"You guessed it!\" },\n      }));\n    } else {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        state: {\n          name: guessAddress.state.name,\n          status: \"Not quite, try again!\",\n        },\n      }));\n    }\n    if (guessAddress.country.name === address.country) {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        country: { name: guessAddress.country.name, status: \"You guessed it!\" },\n      }));\n    } else {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        country: {\n          name: guessAddress.country.name,\n          status: \"Not quite, try again!\",\n        },\n      }));\n    }\n    if (guessAddress.continent.name === address.continent) {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        continent: {\n          name: guessAddress.continent.name,\n          status: \"You guessed it!\",\n        },\n      }));\n    } else {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        continent: {\n          name: guessAddress.continent.name,\n          status: \"Not quite, try again!\",\n        },\n      }));\n    }\n    console.log(\"great guess!\");\n  }\n\n  function handleFormChange(e) {\n    const key = e.target.id;\n    const val = e.target.value;\n\n    setGuessAddress((guessAddress) => ({\n      ...guessAddress,\n      [key]: { name: val, status: \"\" },\n    }));\n  }\n  return (\n    <div className={modalShowing ? \"modal-bg bg-active\" : \"modal-bg\"}>\n      <form className=\"modal\" onSubmit={handleLocationGuess}>\n        <input\n          id=\"continent\"\n          type=\"text\"\n          placeholder=\"Continent\"\n          value={guessAddress.continent.name}\n          onChange={handleFormChange}\n        ></input>\n        {guessAddress.continent.status ? (\n          <small\n            style={\n              guessAddress.continent.status === \"You guessed it!\"\n                ? { color: \"green\", backgroundColor: \"white\" }\n                : { color: \"red\", backgroundColor: \"white\" }\n            }\n          >\n            {guessAddress.continent.status}\n          </small>\n        ) : null}\n        <input\n          id=\"country\"\n          type=\"text\"\n          placeholder=\"Country\"\n          value={guessAddress.country.name}\n          onChange={handleFormChange}\n        ></input>\n        {guessAddress.country.status ? (\n          <small\n            style={\n              guessAddress.country.status === \"You guessed it!\"\n                ? { color: \"green\", backgroundColor: \"white\" }\n                : { color: \"red\", backgroundColor: \"white\" }\n            }\n          >\n            {guessAddress.country.status}\n          </small>\n        ) : null}\n        <input\n          id=\"state\"\n          type=\"text\"\n          placeholder=\"State/Locality\"\n          value={guessAddress.state.name}\n          onChange={handleFormChange}\n        ></input>\n        {guessAddress.state.status ? (\n          <small\n            style={\n              guessAddress.state.status === \"You guessed it!\"\n                ? { color: \"green\", backgroundColor: \"white\" }\n                : { color: \"red\", backgroundColor: \"white\" }\n            }\n          >\n            {guessAddress.state.status}\n          </small>\n        ) : null}\n        <input\n          id=\"city\"\n          type=\"text\"\n          placeholder=\"City/Sublocality\"\n          value={guessAddress.city.name}\n          onChange={handleFormChange}\n        ></input>\n        {guessAddress.city.status ? (\n          <small\n            style={\n              guessAddress.city.status === \"You guessed it!\"\n                ? { color: \"green\", backgroundColor: \"white\" }\n                : { color: \"red\", backgroundColor: \"white\" }\n            }\n          >\n            {guessAddress.city.status}\n          </small>\n        ) : null}\n        <button type=\"submit\">Check!</button>\n        <span\n          className=\"close-mode-box\"\n          onClick={(e) => setModalShowing(false)}\n        >\n          nvm lol\n        </span>\n      </form>\n    </div>\n  );\n}\n\nexport default GuessForm;\n"]},"metadata":{},"sourceType":"module"}