{"ast":null,"code":"var _jsxFileName = \"/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/GuessForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction GuessForm({\n  address,\n  modalShowing,\n  setModalShowing\n}) {\n  _s();\n\n  const [guessAddress, setGuessAddress] = useState({\n    city: {\n      name: \"\",\n      status: \"\"\n    },\n    state: {\n      name: \"\",\n      status: \"\"\n    },\n    country: {\n      name: \"\",\n      status: \"\"\n    },\n    continent: {\n      name: \"\",\n      status: \"\"\n    }\n  }); // function continentEqual(guess, correct) {\n  //   if (correct === \"asia\" || correct === \"europe\") {\n  //     return guess === correct || guess === \"eurasia\";\n  //   } else if (correct === \"australia\" || correct === \"oceania\") {\n  //     return guess === \"australia\" || guess === \"oceania\";\n  //   } else {\n  //     return guess === correct;\n  //   }\n  // }\n\n  function handleLocationGuess(e) {\n    e.preventDefault();\n\n    if (guessAddress.city.name === address.city) {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        city: {\n          name: guessAddress.city.name,\n          status: \"You guessed it!\"\n        }\n      }));\n    } else {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        city: {\n          name: guessAddress.city.name,\n          status: \"Not quite, try again!\"\n        }\n      }));\n    }\n\n    if (guessAddress.state.name === address.state) {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        state: {\n          name: guessAddress.state.name,\n          status: \"You guessed it!\"\n        }\n      }));\n    } else {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        state: {\n          name: guessAddress.state.name,\n          status: \"Not quite, try again!\"\n        }\n      }));\n    }\n\n    if (guessAddress.country.name === address.country) {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        country: {\n          name: guessAddress.country.name,\n          status: \"You guessed it!\"\n        }\n      }));\n    } else {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        country: {\n          name: guessAddress.country.name,\n          status: \"Not quite, try again!\"\n        }\n      }));\n    }\n\n    if (guessAddress.continent.name === address.continent) {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        continent: {\n          name: guessAddress.continent.name,\n          status: \"You guessed it!\"\n        }\n      }));\n    } else {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        continent: {\n          name: guessAddress.continent.name,\n          status: \"Not quite, try again!\"\n        }\n      }));\n    }\n\n    console.log(\"great guess!\");\n  }\n\n  function handleFormChange(e) {\n    const key = e.target.id;\n    const val = e.target.value;\n    setGuessAddress(guessAddress => ({ ...guessAddress,\n      [key]: {\n        name: val,\n        status: \"\"\n      }\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: modalShowing ? \"modal-bg bg-active\" : \"modal-bg\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"modal\",\n      onSubmit: handleLocationGuess,\n      children: [address.continent ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"continent\",\n          type: \"text\",\n          placeholder: \"Continent\",\n          value: guessAddress.continent.name,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), guessAddress.continent.status ? /*#__PURE__*/_jsxDEV(\"small\", {\n          style: guessAddress.continent.status === \"You guessed it!\" ? {\n            color: \"green\",\n            backgroundColor: \"white\"\n          } : {\n            color: \"red\",\n            backgroundColor: \"white\"\n          },\n          children: guessAddress.continent.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"continent\",\n        type: \"text\",\n        placeholder: \"No Continent information available\",\n        value: guessAddress.continent.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), address.country ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"country\",\n          type: \"text\",\n          placeholder: \"Country\",\n          value: guessAddress.country.name,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), guessAddress.country.status ? /*#__PURE__*/_jsxDEV(\"small\", {\n          style: guessAddress.country.status === \"You guessed it!\" ? {\n            color: \"green\",\n            backgroundColor: \"white\"\n          } : {\n            color: \"red\",\n            backgroundColor: \"white\"\n          },\n          children: guessAddress.country.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"country\",\n        type: \"text\",\n        placeholder: \"No Country information available\",\n        value: guessAddress.country.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), address.state ? /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"state\",\n        type: \"text\",\n        placeholder: \"State/Locality\",\n        value: guessAddress.state.name,\n        onChange: handleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"state\",\n        type: \"text\",\n        placeholder: \"No State/Locality information available\",\n        value: guessAddress.state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), guessAddress.state.status ? /*#__PURE__*/_jsxDEV(\"small\", {\n        style: guessAddress.state.status === \"You guessed it!\" ? {\n          color: \"green\",\n          backgroundColor: \"white\"\n        } : {\n          color: \"red\",\n          backgroundColor: \"white\"\n        },\n        children: guessAddress.state.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this) : null, address.city ? /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"city\",\n        type: \"text\",\n        placeholder: \"City\",\n        value: guessAddress.city.name,\n        onChange: handleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"city\",\n        type: \"text\",\n        placeholder: \"No City information available\",\n        value: guessAddress.city.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), guessAddress.city.status ? /*#__PURE__*/_jsxDEV(\"small\", {\n        style: guessAddress.city.status === \"You guessed it!\" ? {\n          color: \"green\",\n          backgroundColor: \"white\"\n        } : {\n          color: \"red\",\n          backgroundColor: \"white\"\n        },\n        children: guessAddress.city.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Check!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close-mode-box\",\n        onClick: e => setModalShowing(false),\n        children: \"nvm lol\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GuessForm, \"1IQF+QMY0KowHCn1yj5j9gCWkTw=\");\n\n_c = GuessForm;\nexport default GuessForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"GuessForm\");","map":{"version":3,"sources":["/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/GuessForm.js"],"names":["React","useState","GuessForm","address","modalShowing","setModalShowing","guessAddress","setGuessAddress","city","name","status","state","country","continent","handleLocationGuess","e","preventDefault","console","log","handleFormChange","key","target","id","val","value","color","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nfunction GuessForm({ address, modalShowing, setModalShowing }) {\n  const [guessAddress, setGuessAddress] = useState({\n    city: { name: \"\", status: \"\" },\n    state: { name: \"\", status: \"\" },\n    country: { name: \"\", status: \"\" },\n    continent: { name: \"\", status: \"\" },\n  });\n\n  // function continentEqual(guess, correct) {\n  //   if (correct === \"asia\" || correct === \"europe\") {\n  //     return guess === correct || guess === \"eurasia\";\n  //   } else if (correct === \"australia\" || correct === \"oceania\") {\n  //     return guess === \"australia\" || guess === \"oceania\";\n  //   } else {\n  //     return guess === correct;\n  //   }\n  // }\n\n  function handleLocationGuess(e) {\n    e.preventDefault();\n\n    if (guessAddress.city.name === address.city) {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        city: { name: guessAddress.city.name, status: \"You guessed it!\" },\n      }));\n    } else {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        city: { name: guessAddress.city.name, status: \"Not quite, try again!\" },\n      }));\n    }\n    if (guessAddress.state.name === address.state) {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        state: { name: guessAddress.state.name, status: \"You guessed it!\" },\n      }));\n    } else {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        state: {\n          name: guessAddress.state.name,\n          status: \"Not quite, try again!\",\n        },\n      }));\n    }\n    if (guessAddress.country.name === address.country) {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        country: { name: guessAddress.country.name, status: \"You guessed it!\" },\n      }));\n    } else {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        country: {\n          name: guessAddress.country.name,\n          status: \"Not quite, try again!\",\n        },\n      }));\n    }\n    if (guessAddress.continent.name === address.continent) {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        continent: {\n          name: guessAddress.continent.name,\n          status: \"You guessed it!\",\n        },\n      }));\n    } else {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        continent: {\n          name: guessAddress.continent.name,\n          status: \"Not quite, try again!\",\n        },\n      }));\n    }\n    console.log(\"great guess!\");\n  }\n\n  function handleFormChange(e) {\n    const key = e.target.id;\n    const val = e.target.value;\n\n    setGuessAddress((guessAddress) => ({\n      ...guessAddress,\n      [key]: { name: val, status: \"\" },\n    }));\n  }\n  return (\n    <div className={modalShowing ? \"modal-bg bg-active\" : \"modal-bg\"}>\n      <form className=\"modal\" onSubmit={handleLocationGuess}>\n        {address.continent ? (\n          <>\n            <input\n              id=\"continent\"\n              type=\"text\"\n              placeholder=\"Continent\"\n              value={guessAddress.continent.name}\n              onChange={handleFormChange}\n            ></input>\n            {guessAddress.continent.status ? (\n              <small\n                style={\n                  guessAddress.continent.status === \"You guessed it!\"\n                    ? { color: \"green\", backgroundColor: \"white\" }\n                    : { color: \"red\", backgroundColor: \"white\" }\n                }\n              >\n                {guessAddress.continent.status}\n              </small>\n            ) : null}\n          </>\n        ) : (\n          <input\n            id=\"continent\"\n            type=\"text\"\n            placeholder=\"No Continent information available\"\n            value={guessAddress.continent.name}\n          ></input>\n        )}\n\n        {address.country ? (\n          <>\n            <input\n              id=\"country\"\n              type=\"text\"\n              placeholder=\"Country\"\n              value={guessAddress.country.name}\n              onChange={handleFormChange}\n            ></input>\n            {guessAddress.country.status ? (\n              <small\n                style={\n                  guessAddress.country.status === \"You guessed it!\"\n                    ? { color: \"green\", backgroundColor: \"white\" }\n                    : { color: \"red\", backgroundColor: \"white\" }\n                }\n              >\n                {guessAddress.country.status}\n              </small>\n            ) : null}\n          </>\n        ) : (\n          <input\n            id=\"country\"\n            type=\"text\"\n            placeholder=\"No Country information available\"\n            value={guessAddress.country.name}\n          ></input>\n        )}\n\n        {address.state ? (\n          <input\n            id=\"state\"\n            type=\"text\"\n            placeholder=\"State/Locality\"\n            value={guessAddress.state.name}\n            onChange={handleFormChange}\n          ></input>\n        ) : (\n          <input\n            id=\"state\"\n            type=\"text\"\n            placeholder=\"No State/Locality information available\"\n            value={guessAddress.state.name}\n          ></input>\n        )}\n        {guessAddress.state.status ? (\n          <small\n            style={\n              guessAddress.state.status === \"You guessed it!\"\n                ? { color: \"green\", backgroundColor: \"white\" }\n                : { color: \"red\", backgroundColor: \"white\" }\n            }\n          >\n            {guessAddress.state.status}\n          </small>\n        ) : null}\n        {address.city ? (\n          <input\n            id=\"city\"\n            type=\"text\"\n            placeholder=\"City\"\n            value={guessAddress.city.name}\n            onChange={handleFormChange}\n          ></input>\n        ) : (\n          <input\n            id=\"city\"\n            type=\"text\"\n            placeholder=\"No City information available\"\n            value={guessAddress.city.name}\n          ></input>\n        )}\n        {/* <input\n          id=\"city\"\n          type=\"text\"\n          placeholder=\"City/Sublocality\"\n          value={guessAddress.city.name}\n          onChange={handleFormChange}\n        ></input> */}\n        {guessAddress.city.status ? (\n          <small\n            style={\n              guessAddress.city.status === \"You guessed it!\"\n                ? { color: \"green\", backgroundColor: \"white\" }\n                : { color: \"red\", backgroundColor: \"white\" }\n            }\n          >\n            {guessAddress.city.status}\n          </small>\n        ) : null}\n        <button type=\"submit\">Check!</button>\n        <span\n          className=\"close-mode-box\"\n          onClick={(e) => setModalShowing(false)}\n        >\n          nvm lol\n        </span>\n      </form>\n    </div>\n  );\n}\n\nexport default GuessForm;\n"]},"metadata":{},"sourceType":"module"}