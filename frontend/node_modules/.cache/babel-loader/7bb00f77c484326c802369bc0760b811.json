{"ast":null,"code":"var _jsxFileName = \"/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { FixedSizeList, VariableSizeList } from \"react-window\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat({\n  setChatShowing,\n  messages,\n  setMessages,\n  address\n}) {\n  _s();\n\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  function handleSend(e) {\n    e.preventDefault();\n    setMessages(messages => [...messages, {\n      who: \"user\",\n      text: newMessage\n    }]);\n    setNewMessage(\"\");\n    setTimeout(botReply, 800);\n  }\n\n  function botReply() {\n    let facts = [address.food, address.language, address.religion];\n    let initialGreetings = [\"Hello! Nice to meet you. If there's something specific you're looking for, I might be able to help.\", \"Hey, what's up? If you ask something specific, maybe I can help!\"];\n    let noComprendo = [\"I'm sorry.. I don't quite understand. Try asking another question, or being more specific.\", \"Hmm.. I don't get what you mean.. Can you say or ask that in a different way?\"];\n    let msg = newMessage.toLocaleLowerCase(); //newMessage shouldn't be \"\" because of the way state works; should be last message (yo creo)\n\n    if (messages.length <= 1) {\n      setMessages(messages => [...messages, {\n        who: \"bot\",\n        text: initialGreetings[Math.floor(Math.random() * greetings.length)]\n      }]);\n    } else if (msg.includes(\"hey\") || // msg.includes(\"yo\") ||    //this doesn't work because it catches too many words like you and yogurt\n    msg.includes(\"whatsup\") || msg.includes(\"whatsgood\") || msg.includes(\"what's up\") || msg.includes(\"what's good\") || msg.includes(\"hello\") || msg.includes(\"howdy\") || msg.includes(\"hola\") || msg.includes(\"how are you\") || msg.includes(\"what's the sitch\")) {\n      setMessages(messages => [...messages, {\n        who: \"bot\",\n        text: \"Hey! :)\"\n      }]);\n    } else if (msg.includes(\"food\") || msg.includes(\"dinner\") || msg.includes(\"lunch\") || msg.includes(\"breakfast\") || msg.includes(\"hungry\") || msg.includes(\"snack\") || msg.includes(\"eat\") || msg.includes(\"grub\") || msg.includes(\"meal\") || msg.includes(\"bite\")) {\n      setMessages(messages => [...messages, {\n        who: \"bot\",\n        text: address.food\n      }]);\n    } else if (msg.includes(\"language\") || msg.includes(\"tongue\") || msg.includes(\"speak\") || msg.includes(\"english\") || msg.includes(\"idioma\")) {\n      setMessages(messages => [...messages, {\n        who: \"bot\",\n        text: address.language\n      }]);\n    } else if ((msg.includes(\"religion\") || msg.includes(\"prayer\") || msg.includes(\"God\") || msg.includes(\"worship\") || msg.includes(\"temple\") || msg.includes(\"synagogue\") || msg.includes(\"church\")) && address.religion) {\n      setMessages(messages => [...messages, {\n        who: \"bot\",\n        text: address.religion\n      }]);\n    } else if (msg.includes(\"information\") || msg.includes(\"facts\") || msg.includes(\"tell me\") || msg.includes(\"this place\")) {\n      setMessages(messages => [...messages, {\n        who: \"bot\",\n        text: facts[Math.floor(Math.random() * facts.length)]\n      }]);\n    } else {\n      setMessages(messages => [...messages, {\n        who: \"bot\",\n        text: noComprendo[Math.floor(Math.random() * noComprendo.length)]\n      }]);\n    }\n  }\n\n  const messageEl = useRef(null);\n  useEffect(() => {\n    if (messageEl) {\n      messageEl.current.addEventListener(\"DOMNodeInserted\", event => {\n        const {\n          currentTarget: target\n        } = event;\n        target.scroll({\n          top: target.scrollHeight,\n          behavior: \"smooth\"\n        });\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"head\",\n      children: [\"Chat\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close-mode-box\",\n        style: {\n          color: \"pink\",\n          backgroundColor: \"#2d3436\"\n        },\n        onClick: e => setChatShowing(false),\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      ref: messageEl,\n      children: messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"msg\",\n        style: m.who === \"bot\" ? {\n          backgroundColor: \"lightblue\"\n        } : {\n          backgroundColor: \"white\",\n          textAlign: \"right\"\n        },\n        children: m.who === \"bot\" ? \"ðŸ¤–  \" + m.text : m.text + \"  ðŸ™‚\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSend,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: messages.length ? \"reply...\" : \"Start conversation...\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: \"green\",\n              color: \"white\"\n            },\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"9GpusyJ2MRKRakQXxwxl3ltFvGQ=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Chat.js"],"names":["React","useState","useRef","useEffect","FixedSizeList","VariableSizeList","Chat","setChatShowing","messages","setMessages","address","newMessage","setNewMessage","handleSend","e","preventDefault","who","text","setTimeout","botReply","facts","food","language","religion","initialGreetings","noComprendo","msg","toLocaleLowerCase","length","Math","floor","random","greetings","includes","messageEl","current","addEventListener","event","currentTarget","target","scroll","top","scrollHeight","behavior","color","backgroundColor","map","m","i","textAlign","value"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { FixedSizeList, VariableSizeList } from \"react-window\";\n\nfunction Chat({ setChatShowing, messages, setMessages, address }) {\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  function handleSend(e) {\n    e.preventDefault();\n    setMessages((messages) => [...messages, { who: \"user\", text: newMessage }]);\n    setNewMessage(\"\");\n    setTimeout(botReply, 800);\n  }\n\n  function botReply() {\n    let facts = [address.food, address.language, address.religion];\n    let initialGreetings = [\n      \"Hello! Nice to meet you. If there's something specific you're looking for, I might be able to help.\",\n      \"Hey, what's up? If you ask something specific, maybe I can help!\",\n    ];\n    let noComprendo = [\n      \"I'm sorry.. I don't quite understand. Try asking another question, or being more specific.\",\n      \"Hmm.. I don't get what you mean.. Can you say or ask that in a different way?\",\n    ];\n    let msg = newMessage.toLocaleLowerCase(); //newMessage shouldn't be \"\" because of the way state works; should be last message (yo creo)\n    if (messages.length <= 1) {\n      setMessages((messages) => [\n        ...messages,\n        {\n          who: \"bot\",\n          text: initialGreetings[Math.floor(Math.random() * greetings.length)],\n        },\n      ]);\n    } else if (\n      msg.includes(\"hey\") ||\n      // msg.includes(\"yo\") ||    //this doesn't work because it catches too many words like you and yogurt\n      msg.includes(\"whatsup\") ||\n      msg.includes(\"whatsgood\") ||\n      msg.includes(\"what's up\") ||\n      msg.includes(\"what's good\") ||\n      msg.includes(\"hello\") ||\n      msg.includes(\"howdy\") ||\n      msg.includes(\"hola\") ||\n      msg.includes(\"how are you\") ||\n      msg.includes(\"what's the sitch\")\n    ) {\n      setMessages((messages) => [...messages, { who: \"bot\", text: \"Hey! :)\" }]);\n    } else if (\n      msg.includes(\"food\") ||\n      msg.includes(\"dinner\") ||\n      msg.includes(\"lunch\") ||\n      msg.includes(\"breakfast\") ||\n      msg.includes(\"hungry\") ||\n      msg.includes(\"snack\") ||\n      msg.includes(\"eat\") ||\n      msg.includes(\"grub\") ||\n      msg.includes(\"meal\") ||\n      msg.includes(\"bite\")\n    ) {\n      setMessages((messages) => [\n        ...messages,\n        { who: \"bot\", text: address.food },\n      ]);\n    } else if (\n      msg.includes(\"language\") ||\n      msg.includes(\"tongue\") ||\n      msg.includes(\"speak\") ||\n      msg.includes(\"english\") ||\n      msg.includes(\"idioma\")\n    ) {\n      setMessages((messages) => [\n        ...messages,\n        { who: \"bot\", text: address.language },\n      ]);\n    } else if (\n      (msg.includes(\"religion\") ||\n        msg.includes(\"prayer\") ||\n        msg.includes(\"God\") ||\n        msg.includes(\"worship\") ||\n        msg.includes(\"temple\") ||\n        msg.includes(\"synagogue\") ||\n        msg.includes(\"church\")) &&\n      address.religion\n    ) {\n      setMessages((messages) => [\n        ...messages,\n        { who: \"bot\", text: address.religion },\n      ]);\n    } else if (\n      msg.includes(\"information\") ||\n      msg.includes(\"facts\") ||\n      msg.includes(\"tell me\") ||\n      msg.includes(\"this place\")\n    ) {\n      setMessages((messages) => [\n        ...messages,\n        { who: \"bot\", text: facts[Math.floor(Math.random() * facts.length)] },\n      ]);\n    } else {\n      setMessages((messages) => [\n        ...messages,\n        {\n          who: \"bot\",\n          text: noComprendo[Math.floor(Math.random() * noComprendo.length)],\n        },\n      ]);\n    }\n  }\n\n  const messageEl = useRef(null);\n  useEffect(() => {\n    if (messageEl) {\n      messageEl.current.addEventListener(\"DOMNodeInserted\", (event) => {\n        const { currentTarget: target } = event;\n        target.scroll({ top: target.scrollHeight, behavior: \"smooth\" });\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"chat\">\n      <div className=\"head\">\n        Chat\n        <span\n          className=\"close-mode-box\"\n          style={{ color: \"pink\", backgroundColor: \"#2d3436\" }}\n          onClick={(e) => setChatShowing(false)}\n        >\n          x\n        </span>\n      </div>\n      <div className=\"messages\" ref={messageEl}>\n        {messages.map((m, i) => (\n          <div\n            className=\"msg\"\n            key={i}\n            style={\n              m.who === \"bot\"\n                ? { backgroundColor: \"lightblue\" }\n                : { backgroundColor: \"white\", textAlign: \"right\" }\n            }\n          >\n            {m.who === \"bot\" ? \"ðŸ¤–  \" + m.text : m.text + \"  ðŸ™‚\"}\n          </div>\n        ))}\n      </div>\n      <div className=\"footer\">\n        <form onSubmit={handleSend}>\n          <span>\n            <input\n              type=\"text\"\n              placeholder={\n                messages.length ? \"reply...\" : \"Start conversation...\"\n              }\n              value={newMessage}\n              onChange={(e) => setNewMessage(e.target.value)}\n            ></input>\n            <button style={{ backgroundColor: \"green\", color: \"white\" }}>\n              Send\n            </button>\n          </span>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}