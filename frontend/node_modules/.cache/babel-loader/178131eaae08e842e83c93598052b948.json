{"ast":null,"code":"var _jsxFileName = \"/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/GuessForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GuessForm({\n  address,\n  modalShowing,\n  setModalShowing\n}) {\n  _s();\n\n  const [guessAddress, setGuessAddress] = useState({\n    city: {\n      name: \"\",\n      status: \"\"\n    },\n    state: {\n      name: \"\",\n      status: \"\"\n    },\n    country: {\n      name: \"\",\n      status: \"\"\n    },\n    continent: {\n      name: \"\",\n      status: \"\"\n    }\n  });\n  const [revealed, setRevealed] = useState(false);\n\n  function continentEqual(guess, correct) {\n    if (correct === \"australia\" || correct === \"oceania\") {\n      return guess === \"australia\" || guess === \"oceania\";\n    } else {\n      return guess === correct;\n    }\n  }\n\n  function countryEqual(guess, correct) {\n    if (correct === \"people's republic of china\") {\n      return guess === \"china\" || guess === correct;\n    } else if (correct === \"united states of america\") {\n      return guess === \"united states\" || guess === \"us\" || guess === \"usa\" || guess === \"u.s.\" || guess === \"u.s.a.\" || guess === correct;\n    } else if (correct === \"republic of uganda\") {\n      return guess === \"uganda\" || guess === correct;\n    } else if (correct === \"republic of côte d'ivoire\") {\n      return guess === \"côte d'ivoire\" || guess === \"cote d'ivoire\" || guess === \"cote d ivoire\" || guess === \"côte ivoire\" || guess === \"cote ivoire\" || guess === \"cote divoire\" || guess === \"ivory coast\" || guess === \"republic of the ivory coast\" || guess === correct;\n    } else {\n      return guess === correct;\n    }\n  }\n\n  function cityEqual(guess, correct) {\n    if (correct === \"macau\") {\n      return guess === \"macao\" || guess === \"macow\" || guess === correct;\n    } else if (correct === \"bengaluru\") {\n      return guess === \"bangalore\" || guess === correct;\n    } else if (correct === \"zürich\") {\n      return guess === \"zurich\" || guess === correct;\n    } else if (correct === \"são paulo\") {\n      return guess === \"sao paulo\" || guess === \"sao paolo\" || guess === correct;\n    } else {\n      return guess === correct;\n    }\n  }\n\n  function stateEqual(guess, correct) {\n    if (correct === \"macau\") {\n      return guess === \"macao\" || guess === \"macow\" || guess === correct;\n    } else if (correct === \"île-de-france\") {\n      return guess === \"ile-de-france\" || guess === \"ile de france\" || guess === \"île de france\" || guess === correct;\n    } else if (correct === \"zürich\") {\n      return guess === \"zurich\" || guess === correct;\n    } else if (correct === \"são paulo\") {\n      return guess === \"sao paulo\" || guess === \"sao paolo\" || guess === correct;\n    } else {\n      return guess === correct;\n    }\n  }\n\n  function handleLocationGuess(e) {\n    e.preventDefault();\n\n    if (cityEqual(guessAddress.city.name.toLocaleLowerCase(), address.name.toLocaleLowerCase())) {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        city: {\n          name: guessAddress.city.name,\n          status: \"You guessed it!\"\n        }\n      }));\n    } else {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        city: {\n          name: guessAddress.city.name,\n          status: \"Not quite, try again!\"\n        }\n      }));\n    }\n\n    if (stateEqual(guessAddress.state.name.toLocaleLowerCase(), address.state.toLocaleLowerCase())) {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        state: {\n          name: guessAddress.state.name,\n          status: \"You guessed it!\"\n        }\n      }));\n    } else {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        state: {\n          name: guessAddress.state.name,\n          status: \"Not quite, try again!\"\n        }\n      }));\n    }\n\n    if (countryEqual(guessAddress.country.name.toLocaleLowerCase(), address.country.toLocaleLowerCase())) {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        country: {\n          name: guessAddress.country.name,\n          status: \"You guessed it!\"\n        }\n      }));\n    } else {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        country: {\n          name: guessAddress.country.name,\n          status: \"Not quite, try again!\"\n        }\n      }));\n    }\n\n    if (continentEqual(guessAddress.continent.name.toLocaleLowerCase(), address.continent.toLocaleLowerCase())) {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        continent: {\n          name: guessAddress.continent.name,\n          status: \"You guessed it!\"\n        }\n      }));\n    } else {\n      setGuessAddress(guessAddress => ({ ...guessAddress,\n        continent: {\n          name: guessAddress.continent.name,\n          status: \"Not quite, try again!\"\n        }\n      }));\n    }\n\n    console.log(\"great guess!\");\n  }\n\n  function handleFormChange(e) {\n    const key = e.target.id;\n    const val = e.target.value;\n    setGuessAddress(guessAddress => ({ ...guessAddress,\n      [key]: {\n        name: val,\n        status: \"\"\n      }\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: modalShowing ? \"modal-bg bg-active\" : \"modal-bg\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"modal\",\n      onSubmit: handleLocationGuess,\n      children: [address.continent ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"continent\",\n          type: \"text\",\n          placeholder: \"Continent\",\n          className: \"modal-piece\",\n          value: guessAddress.continent.name,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), guessAddress.continent.status && guessAddress.continent.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"guess-status\",\n            style: guessAddress.continent.status === \"You guessed it!\" ? {\n              color: \"green\"\n            } : {\n              color: \"red\"\n            },\n            children: guessAddress.continent.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }, this) : null, revealed ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: address.continent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"continent\",\n        className: \"modal-piece\",\n        type: \"text\",\n        placeholder: \"No Continent information available\",\n        readOnly: true,\n        value: guessAddress.continent.name,\n        style: {\n          color: \"white\",\n          backgroundColor: \"lightgrey\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), address.country ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"country\",\n          type: \"text\",\n          placeholder: \"Country\",\n          className: \"modal-piece\",\n          value: guessAddress.country.name,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), guessAddress.country.status && guessAddress.country.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"guess-status\",\n            style: guessAddress.country.status === \"You guessed it!\" ? {\n              color: \"green\"\n            } : {\n              color: \"red\"\n            },\n            children: guessAddress.country.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }, this) : null, revealed ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: address.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"country\",\n        className: \"modal-piece\",\n        type: \"text\",\n        placeholder: \"No Country information available\",\n        readOnly: true,\n        value: guessAddress.country.name,\n        style: {\n          color: \"white\",\n          backgroundColor: \"lightgrey\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), address.state ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"state\",\n          type: \"text\",\n          placeholder: \"State/Region\",\n          className: \"modal-piece\",\n          value: guessAddress.state.name,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), guessAddress.state.status && guessAddress.state.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"guess-status\",\n            style: guessAddress.state.status === \"You guessed it!\" ? {\n              color: \"green\"\n            } : {\n              color: \"red\"\n            },\n            children: guessAddress.state.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 15\n        }, this) : null, revealed ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: address.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"modal-piece\",\n        id: \"state\",\n        type: \"text\",\n        placeholder: \"No State/Region information available\",\n        readOnly: true,\n        value: guessAddress.state.name,\n        style: {\n          color: \"white\",\n          backgroundColor: \"lightgrey\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this), address.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"city\",\n          type: \"text\",\n          placeholder: \"City\",\n          className: \"modal-piece\",\n          value: guessAddress.city.name,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), guessAddress.city.status && guessAddress.city.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"guess-status\",\n            style: guessAddress.city.status === \"You guessed it!\" ? {\n              color: \"green\"\n            } : {\n              color: \"red\"\n            },\n            children: guessAddress.city.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 15\n        }, this) : null, revealed ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: address.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"city\",\n        className: \"modal-piece\",\n        type: \"text\",\n        placeholder: \"No City information available\",\n        readOnly: true,\n        value: guessAddress.city.name,\n        style: {\n          color: \"white\",\n          backgroundColor: \"lightgrey\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"field\",\n          children: \"Check!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => setRevealed(!revealed),\n          className: \"field\",\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: revealed ? \"Hide\" : \"Reveal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close-mode-box\",\n        onClick: e => {\n          setRevealed(false);\n          setModalShowing(false);\n        },\n        children: \"\\u2015\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GuessForm, \"uHTiLAaKjj4mMCaiwQzrhju7Eso=\");\n\n_c = GuessForm;\nexport default GuessForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"GuessForm\");","map":{"version":3,"sources":["/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/GuessForm.js"],"names":["React","useState","GuessForm","address","modalShowing","setModalShowing","guessAddress","setGuessAddress","city","name","status","state","country","continent","revealed","setRevealed","continentEqual","guess","correct","countryEqual","cityEqual","stateEqual","handleLocationGuess","e","preventDefault","toLocaleLowerCase","console","log","handleFormChange","key","target","id","val","value","color","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nfunction GuessForm({ address, modalShowing, setModalShowing }) {\n  const [guessAddress, setGuessAddress] = useState({\n    city: { name: \"\", status: \"\" },\n    state: { name: \"\", status: \"\" },\n    country: { name: \"\", status: \"\" },\n    continent: { name: \"\", status: \"\" },\n  });\n  const [revealed, setRevealed] = useState(false);\n\n  function continentEqual(guess, correct) {\n    if (correct === \"australia\" || correct === \"oceania\") {\n      return guess === \"australia\" || guess === \"oceania\";\n    } else {\n      return guess === correct;\n    }\n  }\n\n  function countryEqual(guess, correct) {\n    if (correct === \"people's republic of china\") {\n      return guess === \"china\" || guess === correct;\n    } else if (correct === \"united states of america\") {\n      return (\n        guess === \"united states\" ||\n        guess === \"us\" ||\n        guess === \"usa\" ||\n        guess === \"u.s.\" ||\n        guess === \"u.s.a.\" ||\n        guess === correct\n      );\n    } else if (correct === \"republic of uganda\") {\n      return guess === \"uganda\" || guess === correct;\n    } else if (correct === \"republic of côte d'ivoire\") {\n      return (\n        guess === \"côte d'ivoire\" ||\n        guess === \"cote d'ivoire\" ||\n        guess === \"cote d ivoire\" ||\n        guess === \"côte ivoire\" ||\n        guess === \"cote ivoire\" ||\n        guess === \"cote divoire\" ||\n        guess === \"ivory coast\" ||\n        guess === \"republic of the ivory coast\" ||\n        guess === correct\n      );\n    } else {\n      return guess === correct;\n    }\n  }\n\n  function cityEqual(guess, correct) {\n    if (correct === \"macau\") {\n      return guess === \"macao\" || guess === \"macow\" || guess === correct;\n    } else if (correct === \"bengaluru\") {\n      return guess === \"bangalore\" || guess === correct;\n    } else if (correct === \"zürich\") {\n      return guess === \"zurich\" || guess === correct;\n    } else if (correct === \"são paulo\") {\n      return (\n        guess === \"sao paulo\" || guess === \"sao paolo\" || guess === correct\n      );\n    } else {\n      return guess === correct;\n    }\n  }\n\n  function stateEqual(guess, correct) {\n    if (correct === \"macau\") {\n      return guess === \"macao\" || guess === \"macow\" || guess === correct;\n    } else if (correct === \"île-de-france\") {\n      return (\n        guess === \"ile-de-france\" ||\n        guess === \"ile de france\" ||\n        guess === \"île de france\" ||\n        guess === correct\n      );\n    } else if (correct === \"zürich\") {\n      return guess === \"zurich\" || guess === correct;\n    } else if (correct === \"são paulo\") {\n      return (\n        guess === \"sao paulo\" || guess === \"sao paolo\" || guess === correct\n      );\n    } else {\n      return guess === correct;\n    }\n  }\n\n  function handleLocationGuess(e) {\n    e.preventDefault();\n\n    if (\n      cityEqual(\n        guessAddress.city.name.toLocaleLowerCase(),\n        address.name.toLocaleLowerCase()\n      )\n    ) {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        city: { name: guessAddress.city.name, status: \"You guessed it!\" },\n      }));\n    } else {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        city: { name: guessAddress.city.name, status: \"Not quite, try again!\" },\n      }));\n    }\n    if (\n      stateEqual(\n        guessAddress.state.name.toLocaleLowerCase(),\n        address.state.toLocaleLowerCase()\n      )\n    ) {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        state: { name: guessAddress.state.name, status: \"You guessed it!\" },\n      }));\n    } else {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        state: {\n          name: guessAddress.state.name,\n          status: \"Not quite, try again!\",\n        },\n      }));\n    }\n    if (\n      countryEqual(\n        guessAddress.country.name.toLocaleLowerCase(),\n        address.country.toLocaleLowerCase()\n      )\n    ) {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        country: { name: guessAddress.country.name, status: \"You guessed it!\" },\n      }));\n    } else {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        country: {\n          name: guessAddress.country.name,\n          status: \"Not quite, try again!\",\n        },\n      }));\n    }\n    if (\n      continentEqual(\n        guessAddress.continent.name.toLocaleLowerCase(),\n        address.continent.toLocaleLowerCase()\n      )\n    ) {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        continent: {\n          name: guessAddress.continent.name,\n          status: \"You guessed it!\",\n        },\n      }));\n    } else {\n      setGuessAddress((guessAddress) => ({\n        ...guessAddress,\n        continent: {\n          name: guessAddress.continent.name,\n          status: \"Not quite, try again!\",\n        },\n      }));\n    }\n    console.log(\"great guess!\");\n  }\n\n  function handleFormChange(e) {\n    const key = e.target.id;\n    const val = e.target.value;\n\n    setGuessAddress((guessAddress) => ({\n      ...guessAddress,\n      [key]: { name: val, status: \"\" },\n    }));\n  }\n  return (\n    <div className={modalShowing ? \"modal-bg bg-active\" : \"modal-bg\"}>\n      <form className=\"modal\" onSubmit={handleLocationGuess}>\n        {address.continent ? (\n          <div className=\"field\">\n            <input\n              id=\"continent\"\n              type=\"text\"\n              placeholder=\"Continent\"\n              className=\"modal-piece\"\n              value={guessAddress.continent.name}\n              onChange={handleFormChange}\n            ></input>\n            {guessAddress.continent.status && guessAddress.continent.name ? (\n              <div>\n                <small\n                  className=\"guess-status\"\n                  style={\n                    guessAddress.continent.status === \"You guessed it!\"\n                      ? { color: \"green\" }\n                      : { color: \"red\" }\n                  }\n                >\n                  {guessAddress.continent.status}\n                </small>\n              </div>\n            ) : null}\n            {revealed ? <div>{address.continent}</div> : null}\n          </div>\n        ) : (\n          <input\n            id=\"continent\"\n            className=\"modal-piece\"\n            type=\"text\"\n            placeholder=\"No Continent information available\"\n            readOnly\n            value={guessAddress.continent.name}\n            style={{ color: \"white\", backgroundColor: \"lightgrey\" }}\n          ></input>\n        )}\n\n        {address.country ? (\n          <div className=\"field\">\n            <input\n              id=\"country\"\n              type=\"text\"\n              placeholder=\"Country\"\n              className=\"modal-piece\"\n              value={guessAddress.country.name}\n              onChange={handleFormChange}\n            ></input>\n            {guessAddress.country.status && guessAddress.country.name ? (\n              <div>\n                <small\n                  className=\"guess-status\"\n                  style={\n                    guessAddress.country.status === \"You guessed it!\"\n                      ? { color: \"green\" }\n                      : { color: \"red\" }\n                  }\n                >\n                  {guessAddress.country.status}\n                </small>\n              </div>\n            ) : null}\n            {revealed ? <div>{address.country}</div> : null}\n          </div>\n        ) : (\n          <input\n            id=\"country\"\n            className=\"modal-piece\"\n            type=\"text\"\n            placeholder=\"No Country information available\"\n            readOnly\n            value={guessAddress.country.name}\n            style={{ color: \"white\", backgroundColor: \"lightgrey\" }}\n          ></input>\n        )}\n\n        {address.state ? (\n          <div className=\"field\">\n            <input\n              id=\"state\"\n              type=\"text\"\n              placeholder=\"State/Region\"\n              className=\"modal-piece\"\n              value={guessAddress.state.name}\n              onChange={handleFormChange}\n            ></input>\n            {guessAddress.state.status && guessAddress.state.name ? (\n              <div>\n                <small\n                  className=\"guess-status\"\n                  style={\n                    guessAddress.state.status === \"You guessed it!\"\n                      ? { color: \"green\" }\n                      : { color: \"red\" }\n                  }\n                >\n                  {guessAddress.state.status}\n                </small>\n              </div>\n            ) : null}\n            {revealed ? <div>{address.state}</div> : null}\n          </div>\n        ) : (\n          <input\n            className=\"modal-piece\"\n            id=\"state\"\n            type=\"text\"\n            placeholder=\"No State/Region information available\"\n            readOnly\n            value={guessAddress.state.name}\n            style={{ color: \"white\", backgroundColor: \"lightgrey\" }}\n          ></input>\n        )}\n\n        {address.name ? (\n          <div className=\"field\">\n            <input\n              id=\"city\"\n              type=\"text\"\n              placeholder=\"City\"\n              className=\"modal-piece\"\n              value={guessAddress.city.name}\n              onChange={handleFormChange}\n            ></input>\n            {guessAddress.city.status && guessAddress.city.name ? (\n              <div>\n                <small\n                  className=\"guess-status\"\n                  style={\n                    guessAddress.city.status === \"You guessed it!\"\n                      ? { color: \"green\" }\n                      : { color: \"red\" }\n                  }\n                >\n                  {guessAddress.city.status}\n                </small>\n              </div>\n            ) : null}\n            {revealed ? <div>{address.name}</div> : null}\n          </div>\n        ) : (\n          <input\n            id=\"city\"\n            className=\"modal-piece\"\n            type=\"text\"\n            placeholder=\"No City information available\"\n            readOnly\n            value={guessAddress.city.name}\n            style={{ color: \"white\", backgroundColor: \"lightgrey\" }}\n          ></input>\n        )}\n        <span>\n          <button type=\"submit\" className=\"field\">\n            Check!\n          </button>\n\n          <button onClick={(e) => setRevealed(!revealed)} className=\"field\">\n            <small>\n              <em>{revealed ? \"Hide\" : \"Reveal\"}</em>\n            </small>\n          </button>\n        </span>\n        <span\n          className=\"close-mode-box\"\n          onClick={(e) => {\n            setRevealed(false);\n            setModalShowing(false);\n          }}\n        >\n          ―\n        </span>\n      </form>\n    </div>\n  );\n}\n\nexport default GuessForm;\n"]},"metadata":{},"sourceType":"module"}