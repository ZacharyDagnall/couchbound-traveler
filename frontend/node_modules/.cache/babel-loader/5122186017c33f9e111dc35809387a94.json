{"ast":null,"code":"var _jsxFileName = \"/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat({\n  setChatShowing,\n  messages,\n  setMessages,\n  address\n}) {\n  _s();\n\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  function handleSend(e) {\n    e.preventDefault();\n    setMessages(messages => [...messages, {\n      who: \"user\",\n      text: newMessage\n    }]);\n    setNewMessage(\"\");\n    setTimeout(botReply(newMessage), 800); //newMessage shouldn't be \"\" because of the way state works; should be last message (yo creo)\n  }\n\n  function botReply(msg) {\n    if (msg.includes(\"food\") || msg.includes(\"dinner\") || msg.includes(\"lunch\") || msg.includes(\"breakfast\") || msg.includes(\"hungry\") || msg.includes(\"snack\")) {\n      setMessages(messages => [...messages, {\n        who: \"bot\",\n        text: \"well aren't you just the sweetest\"\n      }]);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chatbox\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      id: \"chat-header\",\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), messages.map((m, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", m.who === \"bot\" ? \"ðŸ¤–  \" + m.text : m.text + \"  ðŸ™‚\", \" \"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSend,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"reply...\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: \"green\",\n            color: \"white\"\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"close-mode-box\",\n      onClick: e => setChatShowing(false),\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"XKYF7c9cy2B2z7IihwwqYiWFJSA=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Chat.js"],"names":["React","useState","Chat","setChatShowing","messages","setMessages","address","newMessage","setNewMessage","handleSend","e","preventDefault","who","text","setTimeout","botReply","msg","includes","map","m","i","target","value","backgroundColor","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA,QAAlB;AAA4BC,EAAAA,WAA5B;AAAyCC,EAAAA;AAAzC,CAAd,EAAkE;AAAA;;AAChE,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;;AAEA,WAASQ,UAAT,CAAoBC,CAApB,EAAuB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,WAAW,CAAED,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAc;AAAEQ,MAAAA,GAAG,EAAE,MAAP;AAAeC,MAAAA,IAAI,EAAEN;AAArB,KAAd,CAAf,CAAX;AACAC,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAM,IAAAA,UAAU,CAACC,QAAQ,CAACR,UAAD,CAAT,EAAuB,GAAvB,CAAV,CAJqB,CAIkB;AACxC;;AAED,WAASQ,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,QACEA,GAAG,CAACC,QAAJ,CAAa,MAAb,KACAD,GAAG,CAACC,QAAJ,CAAa,QAAb,CADA,IAEAD,GAAG,CAACC,QAAJ,CAAa,OAAb,CAFA,IAGAD,GAAG,CAACC,QAAJ,CAAa,WAAb,CAHA,IAIAD,GAAG,CAACC,QAAJ,CAAa,QAAb,CAJA,IAKAD,GAAG,CAACC,QAAJ,CAAa,OAAb,CANF,EAOE;AACAZ,MAAAA,WAAW,CAAED,QAAD,IAAc,CACxB,GAAGA,QADqB,EAExB;AAAEQ,QAAAA,GAAG,EAAE,KAAP;AAAcC,QAAAA,IAAI,EAAE;AAApB,OAFwB,CAAf,CAAX;AAID;AACF;;AAED,sBACE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA,4BACE;AAAI,MAAA,EAAE,EAAC,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGT,QAAQ,CAACc,GAAT,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACtB,0BACE;AAAA,mBACG,GADH,EAEGD,CAAC,CAACP,GAAF,KAAU,KAAV,GAAkB,SAASO,CAAC,CAACN,IAA7B,GAAoCM,CAAC,CAACN,IAAF,GAAS,MAFhD,EAEwD,GAFxD;AAAA,SAAUO,CAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPA,CAFH,eAWE;AAAM,MAAA,QAAQ,EAAEX,UAAhB;AAAA,6BAEE;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,UAFd;AAGE,UAAA,KAAK,EAAEF,UAHT;AAIE,UAAA,QAAQ,EAAGG,CAAD,IAAOF,aAAa,CAACE,CAAC,CAACW,MAAF,CAASC,KAAV;AAJhC;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAQ,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAE,OAAnB;AAA4BC,YAAAA,KAAK,EAAE;AAAnC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YAXF,eAyBE;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAiC,MAAA,OAAO,EAAGd,CAAD,IAAOP,cAAc,CAAC,KAAD,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAzDQD,I;;KAAAA,I;AA2DT,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Chat({ setChatShowing, messages, setMessages, address }) {\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  function handleSend(e) {\n    e.preventDefault();\n    setMessages((messages) => [...messages, { who: \"user\", text: newMessage }]);\n    setNewMessage(\"\");\n    setTimeout(botReply(newMessage), 800); //newMessage shouldn't be \"\" because of the way state works; should be last message (yo creo)\n  }\n\n  function botReply(msg) {\n    if (\n      msg.includes(\"food\") ||\n      msg.includes(\"dinner\") ||\n      msg.includes(\"lunch\") ||\n      msg.includes(\"breakfast\") ||\n      msg.includes(\"hungry\") ||\n      msg.includes(\"snack\")\n    ) {\n      setMessages((messages) => [\n        ...messages,\n        { who: \"bot\", text: \"well aren't you just the sweetest\" },\n      ]);\n    }\n  }\n\n  return (\n    <div id=\"chatbox\">\n      <h3 id=\"chat-header\">Chat</h3>\n      {messages.map((m, i) => {\n        return (\n          <div key={i}>\n            {\" \"}\n            {m.who === \"bot\" ? \"ðŸ¤–  \" + m.text : m.text + \"  ðŸ™‚\"}{\" \"}\n          </div>\n        );\n      })}\n\n      <form onSubmit={handleSend}>\n        {/* how do i get the send button on the same line as the input box ? */}\n        <span>\n          <input\n            type=\"text\"\n            placeholder=\"reply...\"\n            value={newMessage}\n            onChange={(e) => setNewMessage(e.target.value)}\n          ></input>\n          <button style={{ backgroundColor: \"green\", color: \"white\" }}>\n            Send\n          </button>\n        </span>\n      </form>\n      <span className=\"close-mode-box\" onClick={(e) => setChatShowing(false)}>\n        x\n      </span>\n    </div>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}