{"ast":null,"code":"var _jsxFileName = \"/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Map.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport React from \"react\"; // import * as Mapillary from \"mapillary-js\";\n\nimport { MapillaryViewer } from \"react-mapillary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Map({\n  api\n}) {\n  _s();\n\n  const [imgKey, setImgKey] = useState(\"085Gpl_xNxW1Lw2eeEG28w\");\n  const [latlong, setLatlong] = useState({\n    lat: 0,\n    long: 0\n  });\n  const [address, setAddress] = useState({\n    city: \"\",\n    state: \"\",\n    country: \"\",\n    continent: \"\"\n  });\n  useEffect(() => {\n    fetch(`${api}/city_info`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        accept: \"application/json\"\n      },\n      body: JSON.stringify(latlong)\n    }).then(r => r.json()).then(handleLocationData);\n  }, [latlong]);\n\n  function handleLocationData(data) {\n    console.log(data);\n    data.each(d => {\n      if (d.types.includes(\"country\")) {\n        setAddress({ ...address,\n          country: d.long_name\n        });\n      }\n    });\n  } // const [clientID, setClientID] = useState(\"\");\n  // useEffect(() => {\n  //   fetch(`${api}/clientID`)\n  //     .then((r) => {\n  //       console.log(\"response before json()\", r);\n  //       r.json();\n  //     })\n  //     .then((r) => {\n  //       console.log(\"client id call response\", r);\n  //       setClientID(r);\n  //     });\n  // }, []);\n  //   useEffect(() => {\n  //     fetch(\n  //       \"https://a.mapillary.com/v3/images?client_id=MHZvSFJXZjRWR0p0YWZpODRTMDhDbjoxOTUzYjNlMjVlMWM0NTcw\"\n  //     )\n  //       .then((r) => r.json())\n  //       .then((j) => setImgKey(j.features[10].properties.key));\n  //   }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map-container\" //   role=\"button\"\n    //   tabIndex=\"-1\"\n    ,\n    style: {\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(MapillaryViewer, {\n      clientId: \"MHZvSFJXZjRWR0p0YWZpODRTMDhDbjoxOTUzYjNlMjVlMWM0NTcw\",\n      imageKey: imgKey,\n      filter: [\"==\", \"userKey\", \"2PiRXqdqbY47WzG6CRzEIA\"],\n      onTiltChanged: tilt => console.log(`Tilt: ${tilt}`),\n      onFovChanged: fov => console.log(`FoV: ${fov}`),\n      onNodeChanged: node => {\n        console.log(\"Lat:\", node.latLon.lat, \"Long:\", node.latLon.lon);\n        setLatlong({\n          lat: node.latLon.lat,\n          long: node.latLon.lon\n        });\n      },\n      onBearingChanged: bearing => console.log(`Bearing: ${bearing}`)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"sKEcG7aS9W2qw9SX4MYsiXFWtGs=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/zd/Flatiron/Projects/Phase5/couchbound-traveler/frontend/src/Map.js"],"names":["useEffect","useState","React","MapillaryViewer","Map","api","imgKey","setImgKey","latlong","setLatlong","lat","long","address","setAddress","city","state","country","continent","fetch","method","headers","accept","body","JSON","stringify","then","r","json","handleLocationData","data","console","log","each","d","types","includes","long_name","width","height","tilt","fov","node","latLon","lon","bearing"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport React from \"react\";\n// import * as Mapillary from \"mapillary-js\";\nimport { MapillaryViewer } from \"react-mapillary\";\n\nfunction Map({ api }) {\n  const [imgKey, setImgKey] = useState(\"085Gpl_xNxW1Lw2eeEG28w\");\n  const [latlong, setLatlong] = useState({ lat: 0, long: 0 });\n\n  const [address, setAddress] = useState({\n    city: \"\",\n    state: \"\",\n    country: \"\",\n    continent: \"\",\n  });\n  useEffect(() => {\n    fetch(`${api}/city_info`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        accept: \"application/json\",\n      },\n      body: JSON.stringify(latlong),\n    })\n      .then((r) => r.json())\n      .then(handleLocationData);\n  }, [latlong]);\n\n  function handleLocationData(data) {\n    console.log(data);\n    data.each((d) => {\n      if (d.types.includes(\"country\")) {\n        setAddress({ ...address, country: d.long_name });\n      }\n    });\n  }\n\n  // const [clientID, setClientID] = useState(\"\");\n  // useEffect(() => {\n  //   fetch(`${api}/clientID`)\n  //     .then((r) => {\n  //       console.log(\"response before json()\", r);\n  //       r.json();\n  //     })\n  //     .then((r) => {\n  //       console.log(\"client id call response\", r);\n  //       setClientID(r);\n  //     });\n  // }, []);\n\n  //   useEffect(() => {\n  //     fetch(\n  //       \"https://a.mapillary.com/v3/images?client_id=MHZvSFJXZjRWR0p0YWZpODRTMDhDbjoxOTUzYjNlMjVlMWM0NTcw\"\n  //     )\n  //       .then((r) => r.json())\n  //       .then((j) => setImgKey(j.features[10].properties.key));\n  //   }, []);\n\n  return (\n    <div\n      id=\"map-container\"\n      //   role=\"button\"\n      //   tabIndex=\"-1\"\n      style={{\n        width: \"100vw\",\n        height: \"100vh\",\n      }}\n    >\n      {/* <h2>\n        Coords: {latlong.lat}ºN, {latlong.long}ºE\n      </h2> */}\n      <MapillaryViewer\n        clientId=\"MHZvSFJXZjRWR0p0YWZpODRTMDhDbjoxOTUzYjNlMjVlMWM0NTcw\"\n        imageKey={imgKey}\n        filter={[\"==\", \"userKey\", \"2PiRXqdqbY47WzG6CRzEIA\"]}\n        onTiltChanged={(tilt) => console.log(`Tilt: ${tilt}`)}\n        onFovChanged={(fov) => console.log(`FoV: ${fov}`)}\n        onNodeChanged={(node) => {\n          console.log(\"Lat:\", node.latLon.lat, \"Long:\", node.latLon.lon);\n          setLatlong({ lat: node.latLon.lat, long: node.latLon.lon });\n        }}\n        onBearingChanged={(bearing) => console.log(`Bearing: ${bearing}`)}\n      />\n    </div>\n  );\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}